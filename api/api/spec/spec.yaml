openapi: '3.0.0'
info:
  description: "The Wazuh API is an open source RESTful API that allows for interaction\
    \ with the Wazuh manager from a web browser, command line tool like cURL or any\
    \ script or program that can make web requests. The Wazuh Kibana app relies on\
    \ this heavily and Wazuhâ€™s goal is to accommodate complete remote management of\
    \ the Wazuh infrastructure via the Wazuh Kibana app. Use the API to easily perform\
    \ everyday actions like adding an agent, restarting the manager(s) or agent(s)\
    \ or looking up syscheck details.\n"
  version: '4.0.0'
  x-revision: 4000
  title: 'Wazuh API'
  license:
    name: 'GPL 2.0'
    url: 'https://github.com/wazuh/wazuh/blob/master/LICENSE'

components:
  responses:
    ResponseError:
      description: Response to report a result error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

  schemas:
    ## Common models
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request

    ListMetadata:
      type: object
      required:
        - totalItems
      properties:
        totalItems:
          type: integer
          format: int32
          minimum: 0
          description: Total elements available. It can be used to implement pagination over results.

    SimpleApiError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          additionalProperties:
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              remediation:
                type: string
        id:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer

    ApiError:
      type: object
      required:
        - type
        - title
        - detail
      nullable: true
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
          format: uri
        code:
          type: integer
          format: int32
        remediation:
          type: string
        dapi_errors:
          type: object
          additionalProperties:
            type: object
            properties:
              error:
                type: string
              logfile:
                type: string
                format: path

    ScanIdTime:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Scan ID.
        time:
          type: string
          format: date-time
          description: Date when the scan was performed.

    ItemAffected:
      type: object
      required:
        - affected_items
      properties:
        affected_items:
          type: array
          description: Items that successfully applied the API call action.
          items:
            oneOf:
              - type: string
              - type: object

    AllItemsResponse:
      type: object
      required:
        - total_affected_items
        - failed_items
        - total_failed_items
      properties:
        total_affected_items:
          type: integer
          format: int32
          description: Number of items that have successfully done the requested operation.
        failed_items:
          type: array
          description: List of items that have failed when doing the requested operation.
          items:
            $ref: '#/components/schemas/SimpleApiError'
        total_failed_items:
          type: integer
          format: int32
          description: Number of items that have failed during the requested operation.

    AllItemsResponseAgents:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/Agent'

    AllItemsResponseAgentsDistinct:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentDistinct'

    AllItemsResponseGroups:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentGroup'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseAgentIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseNodeIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/NodeID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseNodeHealthcheck:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/NodeHealthcheck'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseGroupIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/GroupID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseAgentsSimple:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentSimple'

    AllItemsResponseAgentsSynced:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentSynced'

    AllItemsResponseAgentsKeys:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/AgentIdKey'

    AllItemsResponseDecoders:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/Decoder'

    AllItemsResponseDecodersFiles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/DecoderFile'

    AllItemsResponseLists:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                oneOf:
                  - $ref: '#/components/schemas/CDBList'
                  - $ref: '#/components/schemas/CDBListPair'

    AllItemsResponseListsFiles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/CDBListFile'

    AllItemsResponseRoles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/RolesResponse'

    AllItemsResponsePolicies:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                oneOf:
                  - $ref: '#/components/schemas/PoliciesResponse'
                  - type: integer

    AllItemsResponseRules:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/Rules'

    AllItemsResponseRulesFiles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/RulesFiles'

    AllItemsResponseSyscollectorHardware:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorHardware'

    AllItemsResponseSyscollectorHotfixes:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorHotfix'

    AllItemsResponseSyscollectorInterface:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorInterface'

    AllItemsResponseSyscollectorOS:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorOS'

    AllItemsResponseSyscollectorPackages:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorPackages'

    AllItemsResponseSyscollectorPorts:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorPorts'

    AllItemsResponseSyscollectorProcesses:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorProcess'

    AllItemsResponseSyscollectorProtocol:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorProtocol'

    AllItemsResponseSyscollectorNetwork:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscollectorNetwork'

    AllItemsResponseUsers:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/UsersResponse'

    AllItemsResponseCiscatResult:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/CiscatResults'

    AllItemsResponseSyscheckResult:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/SyscheckDatabase'

    AllItemsResponseSyscheckLastScan:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                $ref: '#/components/schemas/LastScan'

    AllItemsResponseSCADatabase:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                  $ref: '#/components/schemas/SCADatabase'

    AllItemsResponseSCAChecks:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                  $ref: '#/components/schemas/SCAChecks'

    AllItemsResponseClusterNodes:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                  $ref: '#/components/schemas/ClusterNode'

    AllItemsResponseWazuhLogs:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                  $ref: '#/components/schemas/WazuhLogs'

    AllItemsResponseValidationStatus:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: Items that successfully applied the API call action.
              items:
                  $ref: '#/components/schemas/ValidationStatus'

    BasicInfo:
      type: object
      properties:
        title:
          type: string
          description: API title name.
        api_version:
          type: string
          description: API version installed in the node.
        revision:
          type: integer
          format: int32
        license_name:
          type: string
          description: API license name.
        license_url:
          type: string
          description: API license url.
        hostname:
          type: string
          description: Server hostname.
        timestamp:
          type: string

    ## Active-response models
    ActiveResponseBody:
      type: object
      properties:
        arguments:
          description: Command arguments.
          type: array
          items:
            type: string
        command:
          description: Command running in the agent. If this value starts by `!`, then it refers to a script name instead of a command name.
          type: string
        custom:
          description: Whether the specified command is a custom command or not.
          type: boolean
          default: false
      required:
        - command

    ## Agents models
    ExtraAgentFields:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AgentStatus'
        configSum:
          type: string
          description: MD5 checksum of agent configuration file.
        group:
          type: array
          description: List of groups that the agent belongs to.
          items:
            type: string
        mergedSum:
          type: string
          description: MD5 checksum of all agent shared configuration files merged.
        ip:
          type: string
          description: IP where the agent communicates with the manager. If the manager can't get this information, it will be the same as registerIP field.
        registerIP:
          type: string
          description: IP used at agent registration process.
        manager:
          type: string
          description: Hostname of the manager where the agent is reporting to.
        node_name:
          type: string
          description: Node ID where the agent is reporting to.
        dateAdd:
          type: string
          format: date-time
          description: Date when the agent was registered.
        lastKeepAlive:
          type: string
          format: date-time
          description: Date when the last keep alive was received from the agent.

        os:
          type: object
          properties:
            major:
              type: string
            name:
              type: string
            uname:
              type: string
            platform:
              type: string
            version:
              type: string
            codename:
              type: string
            arch:
              type: string
            minor:
              type: string
          description: Agent OS information.

    Agent:
      allOf:
      - $ref: '#/components/schemas/AgentSimple'
      - $ref: '#/components/schemas/ExtraAgentFields'

    AgentGroup:
      type: object
      required:
      - count
      - name
      - configSum
      properties:
        count:
          type: integer
          minimum: 0
          description: Number of agents belonging to that group.
        name:
          type: string
        mergedSum:
          type: string
          format: hash
          description: MD5 checksum of all group shared files merged in a single one (merged.mg)
        configSum:
          type: string
          format: hash
          description: MD5 checksum of the group configuration file (agent.conf).

    AgentGroupDeleted:
      type: object
      required:
      - affected_agents
      properties:
        affected_agents:
          type: array
          description: List of agents which belonged to the group but were moved to the default one.
          items:
            $ref: '#/components/schemas/AgentID'

    AgentIdKey:
      type: object
      required:
        - id
        - key
      properties:
        id:
          $ref: '#/components/schemas/AgentID'
        key:
          type: string
          format: base64

    AgentSimple:
      type: object
      properties:
        version:
          type: string
          description: Wazuh version the agent has intalled.
        id:
          $ref: '#/components/schemas/AgentID'
        name:
          type: string
          description: Agent name used at registration process.

    AgentStatus:
      type: string
      enum:
      - active
      - pending
      - never_connected
      - disconnected
      description: Agent status. It is calculated based on the last keep alive and the Wazuh version.

    AgentsSummaryStatus:
      type: object
      properties:
        total:
          type: integer
          format: int32
        active:
          type: integer
          format: int32
        disconnected:
          type: integer
          format: int32
        never_connected:
          type: integer
          format: int32
        pending:
          type: integer
          format: int32

    AgentDistinct:
      allOf:
        - $ref: '#/components/schemas/AgentSimple'
        - $ref: '#/components/schemas/ExtraAgentFields'
        - type: object
          properties:
            count:
              type: integer
              format: int32
              description: Returns the number of agents with the specific unique fields

    AgentSynced:
      type: object
      properties:
        id:
          type: string
          description: 'Agent ID'
        synced:
          type: boolean
          description: 'Sync info'

    AgentID:
      type: string
      minLength: 3
      description: Agent ID.
      format: numbers

    NodeID:
      type: string
      description: Node ID.
      format: string

    GroupID:
      type: string
      minLength: 1
      description: Group name.
      format: group_names

    GroupFile:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              filename:
                type: string
              hash:
                type: string

    AgentConfiguration:
      type: object
      description: Configuration the agent is currently using. The output of this API call depends on the component requested and the agent configuration.

    GroupConfiguration:
      type: object
      required:
      - filters
      - config
      properties:
        filters:
          type: object
          properties:
            os:
              type: string
              description: OS family where the configuration is being applied.
            name:
              type: string
              description: The name of the agent where that configuration is being applied.
            profile:
              type: string
              description: Profile name. Any agent configured to use the defined profile may use the block.
        config:
          type: object
          description: Group configuration. The fields on this object depend on the actual group configuration.

    ## CisCat models
    CiscatResults:
      type: object
      properties:
        benchmark:
          type: string
          description: CIS-CAT benchmark where the profile is defined.
        error:
          type: integer
          format: int32
          description: "Number of checks that CIS-CAT wasn't able to run."
        fail:
          type: integer
          format: int32
          description: Number of failed checks. If this number is higher than 0 the host will probably have a vulnerability.
        notchecked:
          type: integer
          format: int32
          description: Number of not passed checks.
        pass:
          type: integer
          format: int32
          description: Number of passed checks.
        profile:
          type: string
          description: CIS-CAT profile scanned.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        score:
          type: integer
          format: int32
          description: Percentage of passed checks.
        unknown:
          type: integer
          format: int32
          description: Number of checks which status CIS-CAT wasn't able to determine.

    ## Cluster models
    ClusterNodeBasic:
      type: object
      properties:
        type:
          type: string
          enum:
          - worker
          - master
          description: Node type.
        version:
          type: string
          format: \d+\.\d+\.\d+
          description: Wazuh version installed in the node.
        ip:
          type: string
          description: IP the node is using to communicate with other nodes in the cluster.

    ClusterNodeName:
      type: string
      description: Node ID.

    ClusterNode:
      allOf:
        - $ref: '#/components/schemas/ClusterNodeBasic'
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/ClusterNodeName'

    NodeHealthcheck:
      type: object
      properties:
        name:
          type: object
          properties:
            info:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ClusterNodeName'
                info:
                  allOf:
                    - $ref: '#/components/schemas/ClusterNodeBasic'
                    - type: object
                      properties:
                        totalActiveAgents:
                          type: integer
                          format: int32
                          minimum: 0
                          description: Number of agents currently reporting to that node.
            status:
              type: object
              properties:
                last_keep_alive:
                  type: string
                last_sync_agent_groups:
                  type: object
                  properties:
                    date_start_master:
                      type: string
                    date_end_master:
                      type: string
                    total_agentgroups:
                      type: integer
                      format: int32
                last_sync_agentinfo:
                  type: object
                  properties:
                    date_start_master:
                      type: string
                    date_end_master:
                      type: string
                    total_agentinfo:
                      type: integer
                      format: int32
                last_sync_integrity:
                  type: object
                  properties:
                    date_start_master:
                        type: string
                    date_end_master:
                        type: string
                    total_files:
                      type: object
                      properties:
                        extra:
                          type: integer
                          format: int32
                        extra_valid:
                          type: integer
                          format: int32
                        missing:
                          type: integer
                          format: int32
                        shared:
                          type: integer
                          format: int32
                sync_agentinfo_free:
                  type: boolean
                sync_extravalid_free:
                  type: boolean
                sync_integrity_free:
                  type: boolean

    DaemonStatus:
      type: string
      enum:
      - stopped
      - running

    # Security models
    Role_id:
      type: string
      format: numbers
      description: Role ID.
    Policy_id:
      type: string
      format: numbers
      description: Policy ID.
    Username:
      type: string
      description: Username of the user.
      format: alphanumeric
    PoliciesRequest:
      type: object
      properties:
        name:
          description: Policy name.
          type: string
        policy:
          description: "This is the definition of the new policy"
          type: object
          properties:
            actions:
              type: array
              description: "These are the actions that the policy performs"
              items:
                type: string
            resources:
              type: array
              description: "Resources accessed by policy"
              items:
                type: string
            effect:
              type: string
              description: "Effect of the policy"
          required:
            - actions
            - resources
            - effect
    PoliciesResponse:
      type: object
      properties:
        id:
          description: Policy id
          type: integer
        name:
          description: Policy name.
          type: string
        policy:
          description: "This is the definition of the new policy"
          type: object
          properties:
            actions:
              type: array
              description: "These are the actions that the policy performs"
              items:
                type: string
            resources:
              type: array
              description: "Resources accessed by policy"
              items:
                type: string
            effect:
              type: string
              description: "Effect of the policy"
    RolesResponse:
      type: object
      properties:
        id:
          type: integer
          description: 'Role id'
        name:
          type: string
          description: 'Role name'
        rule:
          type: object
          description: 'Role rule'
    RolesRequest:
      type: object
      properties:
        name:
          type: string
          description: 'Role name'
        rule:
          type: object
          description: 'Role rule'
    UsersResponse:
      type: object
      properties:
        username:
          type: string
          description: Policy name.

    # Cluster and manager models
    WazuhDaemonsStatus:
      type: object
      properties:
        ossec-agentlessd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-analysisd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-authd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-csyslogd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-dbd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-execd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-integratord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-logcollector:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-maild:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-monitord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-remoted:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-reportd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-syscheckd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-apid:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-clusterd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-db:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-modulesd:
          $ref: '#/components/schemas/DaemonStatus'

    WazuhInfo:
      type: object
      properties:
        path:
          type: string
          format: paths
          description: Wazuh install path.
        version:
          type: string
          description: Wazuh version.
        compilation_date:
          type: string
          format: date-time
        type:
          type: string
          description: "Wazuh install type. "
          enum:
          - server
          - local
          - hybrid
        max_agents:
          type: string
          minimum: 0
          description: Maximum number of agents that can be registered. This variable is defined at compilation time.
        openssl_support:
          type: string
        ruleset_version:
          type: string
        tz_offset:
          type: string
        tz_name:
          type: string

    WazuhConfiguration:
      type: object
      properties:
        active-response:
          type: array
          items:
            type: object
        agentless:
          type: array
          items:
            type: object
        alerts:
          type: object
        auth:
          type: object
        client:
          type: object
        client_buffer:
          type: object
        cluster:
          type: object
        command:
          type: array
          items:
            type: object
        database_output:
          type: object
        email_alerts:
          type: object
        global:
          type: object
        integration:
          type: array
          items:
            type: object
        labels:
          type: object
        localfile:
          type: array
          items:
            type: object
        logging:
          type: object
        remote:
          type: array
          items:
            type: object
        reports:
          type: object
        rootcheck:
          type: object
        ruleset:
          type: object
        sca:
          type: object
        socket:
          type: object
        syscheck:
          type: object
        syslog_output:
          type: array
          items:
            type: object

        #Wodle sections inside WazuhConfiguration(ossec.conf)
        agent-key-polling:
          type: object
        aws-s3:
          type: object
        azure-logs:
          type: object
        cis-cat:
          type: object
        docker-listener:
          type: object
        open-scap:
          type: object
        osquery:
          type: object
        syscollector:
          type: object
        vulnerability-detector:
          type: object

    WazuhStats:
      type: array
      items:
        type: object
        properties:
          alerts:
            type: array
            items:
              type: object
              properties:
                sigid:
                  type: integer
                  format: int32
                  description: Rule ID that matched the event.
                level:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 15
                  description: Alert level
                times:
                  type: integer
                  format: int32
                  description: Number of times the alert was raised during the specified hour.
          events:
            type: integer
            format: int32
            description: Number of events procesed during the specified hour.
          firewall:
            type: integer
            format: int32
            description: Number of firewall alerts raised during the specified hour.
          hour:
            type: integer
            format: int32
            description: Hour of the day in 24h format.
          syscheck:
            type: integer
            format: int32
            description: Number of syscheck alerts raised during the specified hour.
          totalAlerts:
            type: integer
            format: int32
            description: Number of alerts raised during the specified hour.

    WazuhHourlyStats:
      type: object
      properties:
        averages:
          type: array
          maxLength: 24
          minLength: 24
          description: Array containing the number of alerts for every hour.
          items:
            type: integer
        interactions:
          type: integer
          format: int32

    WazuhWeeklyStats:
      type: object
      properties:
        Sun:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Mon:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Tue:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Wed:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Thu:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Fri:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Sat:
          $ref: '#/components/schemas/WazuhHourlyStats'

    WazuhAnalysisdStats:
      type: object
      properties:
        alerts_queue_size:
          type: number
          format: float
          description: Pending to write in disk alerts queue size.
        alerts_queue_usage:
          type: number
          format: float
          description: If an event matches a rule, an alert is raised. The alerts are pushed to a _pending to write in disk alerts_ queue. This variable shows usage of that queue.
        alerts_written:
          type: number
          format: float
          description: Total of alerts written in disk during the last 5 seconds.
        archives_queue_size:
          type: number
          format: float
          description: _Events to write in the archives.log_ queue size.
        archives_queue_usage:
          type: number
          format: float
          description: _Events to write in the archives.log_ queue usage.
        event_queue_size:
          type: number
          format: float
          description: Non catalogued events queue size.
        event_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for events not catalogued in any of the previously mentioned queues.
        events_dropped:
          type: number
          format: float
          description: "Discarded events because they didn't match any rule in the ruleset."
        events_edps:
          type: number
          format: float
          description: Same as `events_processed` but per second.
        events_processed:
          type: number
          format: float
          description: Total of events processed (i.e. matched against Wazuh ruleset) in the last 5 seconds.
        events_received:
          type: number
          format: float
          description: Events received in `analysisd` from the rest of modules in the last 5 seconds.
        firewall_queue_size:
          type: number
          format: float
          description: _Events to write in the firewall log_ queue size.
        firewall_queue_usage:
          type: number
          format: float
          description: Percentage of use in the queue of events to write in the firewall log.
        firewall_written:
          type: number
          format: float
          description: Same as `alerts_written` but focusing in firewall alerts.
        fts_written:
          type: number
          format: float
          description: "Same as `alerts_written` but focusing in [FTS alerts](https://documentation.wazuh.com/current/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts#fts)."
        hostinfo_edps:
          type: number
          format: float
          description: Hostinfo events decoded per second.
        hostinfo_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for hostinfo events.
        hostinfo_queue_size:
          type: number
          format: float
          description: Hostinfo events queue size.
        hostinfo_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for hostinfo events.
        other_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for non catalogued events.
        other_events_edps:
          type: number
          format: float
          description: Non catalogued events decoded per second.
        rootcheck_edps:
          type: number
          format: float
          description: Rootcheck events decoded per second.
        rootcheck_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for rootcheck events.
        rootcheck_queue_size:
          type: number
          format: float
          description: Rootcheck events queue size.
        rootcheck_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for rootcheck events.
        rule_matching_queue_size:
          type: number
          format: float
          description: Pending to process events queue size.
        rule_matching_queue_usage:
          type: number
          format: float
          description: After decoding, events are pushed to a _pending to process_ queue which will match the events against the Wazuh ruleset to raise alerts. This variable shows usage of that queue.
        sca_edps:
          type: number
          format: float
          description: Policy monitoring events decoded per second.
        sca_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for policy monitoring events.
        sca_queue_size:
          type: number
          format: float
          description: Policy monitoring events queue size.
        sca_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for policy monitoring events.
        statistical_queue_size:
          type: number
          format: float
          description: Stats log queue size.
        statistical_queue_usage:
          type: number
          format: float
          description: Stats log queue usage.
        syscheck_edps:
          type: number
          format: float
          description: FIM events decoded per second (EDPS = Events Decoded Per Second).
        syscheck_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for FIM events.
        syscheck_queue_size:
          type: number
          format: float
          description: Syscheck events queue size.
        syscheck_queue_usage:
          type: number
          format: float
          description: Percentage of use in the syscheck events queue pending to be decoded. Events are discarded when the queue is full.
        syscollector_edps:
          type: number
          format: float
          description: System inventory events decoded per second.
        syscollector_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for system inventory events.
        syscollector_queue_size:
          type: number
          format: float
          description: System inventory events queue size.
        syscollector_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for system inventory events.
        total_events_decoded:
          type: number
          format: float
          description: Total events decoded in the last 5 seconds. This number is not accumulative, the number in the following 5 seconds can be lower than the previous one.
        winevt_edps:
          type: number
          format: float
          description: Windows events decoded per second.
        winevt_events_decoded:
          type: number
          format: float
          description: Same as `total_events_decoded` but for Windows events.
        winevt_queue_size:
          type: number
          format: float
          description: Windows events queue size.
        winevt_queue_usage:
          type: number
          format: float
          description: Same as `syscheck_queue_usage` but for Windows events.

    WazuhRemotedStats:
      type: object
      properties:
        ctrl_msg_count:
          type: number
          format: float
          description: Number of control messages received from all agents during the last five seconds.
        discarded_count:
          type: number
          format: float
          description: Number of discarded events received from agents during the last five seconds.
        evt_count:
          type: number
          format: float
          description: Number of events sent to Analysisd during the last five seconds.
        msg_sent:
          type: number
          format: float
          description: Number of messages sent to the agents during the last five seconds.
        queue_size:
          type: number
          format: float
          description: Usage of the queue to storage events from agents.
        recv_bytes:
          type: number
          format: float
          description: Number of received bytes from all agents during the last five seconds.
        tcp_sessions:
          type: number
          format: float
          description: Number of TCP active sessions during the last five seconds.
        total_queue_size:
          type: number
          format: float
          description: Total queue size to store events from agents.

    WazuhLogs:
      type: object
      properties:
        description:
          type: string
          description: Log message.
        level:
          type: string
          description: Log level.
          enum:
            - critical
            - debug
            - debug2
            - error
            - info
            - warning
        tag:
          type: string
          description: Wazuh component that logged the event.
          enum:
            - ossec-agentlessd
            - ossec-analysisd
            - ossec-authd
            - ossec-csyslogd
            - ossec-dbd
            - ossec-execd
            - ossec-integratord
            - ossec-maild
            - ossec-monitord
            - ossec-logcollector
            - ossec-remoted
            - ossec-reportd
            - ossec-rootcheck
            - ossec-syscheckd
            - ossec-testrule
            - sca
            - verify-agent-conf
            - wazuh-db
            - wazuh-modulesd
            - wazuh-modulesd:agent-key-polling
            - wazuh-modulesd:aws-s3
            - wazuh-modulesd:azure-logs
            - wazuh-modulesd:ciscat
            - wazuh-modulesd:command
            - wazuh-modulesd:database
            - wazuh-modulesd:docker-listener
            - wazuh-modulesd:download
            - wazuh-modulesd:oscap
            - wazuh-modulesd:osquery
            - wazuh-modulesd:syscollector
            - wazuh-modulesd:vulnerability-detector
        timestamp:
          type: string
          format: date-time

    ValidationStatus:
      type: object
      properties:
        name:
          type: string
          description: Node name
        status:
          type: string
          description: status value

    LogSummary:
      type: object
      properties:
        all:
          type: integer
          format: int32
          minimum: 0
        critical:
          type: integer
          format: int32
          minimum: 0
        debug:
          type: integer
          format: int32
          minimum: 0
        error:
          type: integer
          format: int32
          minimum: 0
        info:
          type: integer
          format: int32
          minimum: 0
        warning:
          type: integer
          format: int32
          minimum: 0

    WazuhLogsSummary:
      type: object
      properties:
          ossec-agentlessd:
            $ref: '#/components/schemas/LogSummary'
          ossec-analysisd:
            $ref: '#/components/schemas/LogSummary'
          ossec-authd:
            $ref: '#/components/schemas/LogSummary'
          ossec-csyslogd:
            $ref: '#/components/schemas/LogSummary'
          ossec-dbd:
            $ref: '#/components/schemas/LogSummary'
          ossec-execd:
            $ref: '#/components/schemas/LogSummary'
          ossec-integratord:
            $ref: '#/components/schemas/LogSummary'
          ossec-maild:
            $ref: '#/components/schemas/LogSummary'
          ossec-monitord:
            $ref: '#/components/schemas/LogSummary'
          ossec-logcollector:
            $ref: '#/components/schemas/LogSummary'
          ossec-remoted:
            $ref: '#/components/schemas/LogSummary'
          ossec-reportd:
            $ref: '#/components/schemas/LogSummary'
          ossec-rootcheck:
            $ref: '#/components/schemas/LogSummary'
          ossec-syscheckd:
            $ref: '#/components/schemas/LogSummary'
          ossec-testrule:
            $ref: '#/components/schemas/LogSummary'
          sca:
            $ref: '#/components/schemas/LogSummary'
          wazuh-db:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:agent-key-polling:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:aws-s3:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:azure-logs:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:ciscat:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:command:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:database:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:docker-listener:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:download:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:oscap:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:osquery:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:syscollector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:vulnerability-detector:
            $ref: '#/components/schemas/LogSummary'

    ConfirmationMessage:
      type: object
      properties:
        message:
          type: string
          description: Confirmation message

    ConfigurationValidation:
      type: object
      properties:
        status:
          type: string
          description: Configuration status.
          enum:
          - OK

    # Rootcheck models
    RootcheckDatabase:
      type: object
      properties:
        status:
          type: string
          description: Status of the check, respecting to the previous scan.
          enum:
          - outstanding
          - solved
        readDay:
          type: string
          format: date-time
          description: Lastest scan date.
        oldDay:
          type: string
          format: date-time
          description: Previous scan date.
        pci:
          type: string
          description: PCI DSS requirement level.
        cis:
          type: string
          description: CIS compliance requirement level.
        event:
          type: string
          description: Brief description of what is being checked.

    LastScan:
      type: object
      properties:
        end:
          type: string
          nullable: true
          format: date-time
          description: 'Date when the latest scan finished. If it is in progress, or no scans have been run, null will be returned.'
        start:
          type: string
          nullable: true
          format: date-time
          description: 'Date when the latest scan started. If no scans have been run, null will be returned.'

    # Rules models
    RulesFiles:
      type: object
      properties:
        file:
          type: string
          description: Filename where the rule is defined.
        path:
          type: string
          description: Path where the file defining the rule is located. The path is relative to the Wazuh install path.
        status:
          type: string
          description: Rule status.
          enum:
          - enabled
          - disabled

    Rules:
      allOf:
        - $ref: '#/components/schemas/RulesFiles'
        - type: object
          properties:
            description:
              type: string
              description: Rule description. This description is shown when an alert matching the rule is raised.
            details:
              type: object
              description: Rule definition details.
            gdpr:
              type: array
              description: GDPR checks the rule is checking.
              items:
                type: string
            gpg13:
              type: array
              description: GPG13 checks the rule is checking.
              items:
                type: string
            groups:
              type: array
              description: Groups the rule belongs to.
              items:
                type: string
            hipaa:
              type: array
              description: HIPAA checks the rule is checking.
              items:
                type: string
            id:
              type: integer
              format: int32
              description: Rule ID.
            level:
              type: integer
              format: int32
              minimum: 0
              maximum: 15
              description: Rule level.
            nist-800-53:
              type: array
              description: NIST-800-53 checks the rule is checking.
              items:
                type: string
            pci:
              type: array
              description: PCI DSS checks the rule is checking.
              items:
                type: string

    # SCA models
    SCAChecks:
      type: object
      properties:
        description:
          type: string
          description: A description of what is being checked.
        directory:
          type: string
          description: Analyzed directories.
        file:
          type: string
          description: Analyzed file path.
        id:
          type: integer
          format: int32
          description: Policy check ID. A policy contains multiple checks.
        policy_id:
          type: string
          description: Scanned policy ID.
        process:
          type: string
          description: Checks whether a process is running or not. It's only returned when the checked process it's running.
        rationale:
          type: string
          description: Explains why this check is necessary.
        references:
          type: string
          description: A link to a documentation page about the check.
        registry:
          type: string
          description: Analyzed registry.
        remediation:
          type: string
          description: Explains how to fix the check, this field is very useful in case the check failed.
        result:
          type: string
          description: Check result.
          enum:
            - passed
            - failed
            - ""
        title:
          type: string
          description: A brief description of what is being checked.
        condition:
          type: string
          description: Specifies how rule results are aggregated in order to calculate the final value of a check.
          enum:
            - all
            - any
            - none
    SCADatabase:
      type: object
      properties:
        description:
          type: string
          description: Brief description of what the policy is checking.
        end_scan:
          type: string
          format: date-time
          description: When the last scan finished.
        fail:
          type: integer
          format: int32
          description: Number of failed checks. If this number is higher than 0 the host has a vulnerability.
        name:
          type: string
          description: Policy name.
        pass:
          type: integer
          format: int32
          description: Number of passed checks.
        policy_id:
          type: string
          description: Policy ID. This value must be used in `GET/sca/{agent_id}/checks/{policy_id}` API call.
        references:
          type: string
          description: A link to a documentation page about the policy.
        score:
          type: integer
          format: int32
          description: Percentage of passed checks.
        start_scan:
          type: string
          format: date-time
          description: When the last scan started.

    # Syscheck models
    SyscheckDatabase:
      type: object
      properties:
        sha1:
          type: string
          format: hash_or_empty
          description: SHA1 checksum of the file.
        file:
          type: string
          description: File name that raised the alert.
        md5:
          type: string
          format: hash_or_empty
          description: MD5 checksum of the file.
        inode:
          type: integer
          format: int32
          description: inode of the file. Only available in Linux agents.
        uid:
          type: string
          format: numbers_or_empty
          description: UID of the file.
        date:
          type: string
          format: date-time
          description: Date when the alert was raised.
        perm:
          type: string
          format: numbers_or_empty
          description: File permissions.
        type:
          type: string
          description: File type. Registry type only available in Windows agents.
          enum:
          - file
          - registry
        gname:
          type: string
          format: names_or_empty
          description: Group name. Only available in Linux agents.
        uname:
          type: string
          format: names_or_empty
          description: User name of the file.
        size:
          type: integer
          format: int64
          description: File size in bytes.
        gid:
          type: string
          format: numbers_or_empty
          description: GID of the file. Only available in Linux agents.
        mtime:
          type: string
          format: date-time_or_empty
          description: Last modification date of the file.
        sha256:
          type: string
          format: hash_or_empty
          description: SHA256 checksum of the file.

    # Decoders models
    Decoder:
      type: object
      allOf:
        - $ref: '#/components/schemas/DecoderFile'
      properties:
        name:
          type: string
          description: Decoder name
        position:
          type: integer
          format: int32
          minimum: 0
          description: Position of this decoder in the decoder file. The parent decoder will have position 0, the following defined decoder will have position 1, and so on.
        details:
          type: object
          description: Decoder definition fields.
          properties:
            program_name:
              type: string
              nullable: true
            parent:
              type: string
            prematch:
              type: string
            regex:
              type: array
              items:
                type: string
            order:
              type: string
            accumulate:
              type: boolean
              nullable: true

    DecoderFile:
      type: object
      required:
      - file
      - status
      - path
      properties:
        file:
          type: string
          description: Filename containing decoder definitions.
        status:
          type: string
          description: Whether the decoders defined in that file are used by Wazuh or not.
        path:
          type: string
          format: ruleset_path
          description: Decoder file path.

    # Syscollector models
    SyscollectorHardware:
      type: object
      properties:
        board_serial:
          type: string
          description: Motherboard serial number. This value will be empty in virtual machines.
        cpu:
          type: object
          properties:
            cores:
              type: integer
              format: int32
              minimum: 0
              description: Number of cores the CPU has.
            mhz:
              type: number
              format: float
              minimum: 0
              description: Mhz the CPU has.
            name:
              type: string
              description: CPU name.
        ram:
          type: object
          properties:
            free:
              type: integer
              format: int32
              minimum: 0
              description: Current free RAM memory.
            total:
              type: integer
              format: int32
              minimum: 0
              description: Total RAM memory.
            usage:
              type: integer
              format: int32
              minimum: 0
              maximum: 100
              description: RAM memory currently used.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorHotfix:
      type: object
      properties:
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        hotfix:
          type: string
          description: Hotfixes for windows agents.

    SyscollectorNetwork:
      type: object
      properties:
        address:
          type: string
          description: IP address associated with the network interface.
        broadcast:
          type: string
          description: IP address associated with the broadcast.
        iface:
          type: string
          description: Network interface name.
        netmask:
          type: string
          description: Netmask associated with the network interface.
        proto:
          type: string
          description: Protocol associated with the network interface.
        scan_id:
          type: integer
          format: int64
          description: Scan ID.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    NetworkInterfacePackets:
      type: object
      properties:
        bytes:
          type: integer
          format: int32
          minimum: 0
          description: Number of bytes in the network interface.
        dropped:
          type: integer
          format: int32
          minimum: 0
          description: Number of dropped packages in the network interface.
        error:
          type: integer
          format: int32
          minimum: 0
          description: Number of packages containing any error in the network interface.
        packets:
          type: integer
          format: int32
          minimum: 0
          description: Number of packages in the network interface.

    SyscollectorInterface:
      type: object
      properties:
        mac:
          type: string
          description: MAC Address of the network interface.
        mtu:
          type: integer
          format: int32
          minimum: 0
          description: "Network interface's Maximum Transfer Unit"
        name:
          type: string
          description: Network interface name.
        rx:
          description: Information related to received packets in the network interface.
          $ref: '#/components/schemas/NetworkInterfacePackets'
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        state:
          type: string
          description: Network interface state.
          enum:
            - up
            - down
        tx:
          description: Information related to sent packets in the network interface.
          $ref: '#/components/schemas/NetworkInterfacePackets'
        type:
          type: string
          description: Network interface type.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorProtocol:
      type: object
      properties:
        dhcp:
          $ref: '#/components/schemas/DHCPStatus'
        gateway:
          description: Gateway IP.
          type: string
        iface:
          description: Network interface name.
          type: string
        scan_id:
          type: integer
          format: int64
          description: Scan ID.
        type:
          type: string
          description: Protocol of the interface data
          enum:
          - ipv4
          - ipv6
        agent_id:
          $ref: '#/components/schemas/AgentID'

    DHCPStatus:
      type: string
      description: DHCP status.
      enum:
        - enabled
        - disabled
        - unknown
        - BOOTP

    SyscollectorOS:
      type: object
      properties:
        architecture:
          type: string
          description: OS arquitecture.
        hostname:
          type: string
          description: Machine's hostname.
        os:
          type: object
          properties:
            codename:
              type: string
              description: OS version codename.
            major:
              type: string
              description: Major release version.
            minor:
              type: string
              description: Minor release version
            name:
              type: string
              description: OS name.
            platform:
              type: string
              description: OS platform name.
            version:
              type: string
              description: Full version name.
        release:
          type: string
          description: Release name.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        sysname:
          type: string
          description: System name.
        version:
          type: string
          description: Release version.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorPackages:
      type: object
      properties:
        architecture:
          type: string
          description: Package architecture.
        description:
          type: string
          description: Brief package description.
        format:
          type: string
          description: Package format.
          enum:
            - deb
            - rpm
            - win
            - pkg
        multiarch:
          type: string
          description: Whether the package has multiarchitecture support.
          enum:
            - allowed
            - same
            - foreign
        name:
          type: string
          description: Package name.
        priority:
          type: string
          description: Package priority.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        section:
          type: string
          description: Package section.
        source:
          type: string
          description: Source section.
        size:
          type: integer
          description: Installed package size in bytes.
        vendor:
          type: string
          description: Vendor name.
        version:
          type: string
          description: Release version installed.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    PortInfo:
      type: object
      properties:
        ip:
          type: string
          description: Bind IP.
        port:
          type: integer
          minimum: 0
          format: int32
          description: Port used.

    SyscollectorPorts:
      type: object
      properties:
        inode:
          type: integer
          format: int64
          description: Port inode.
        local:
          $ref: '#/components/schemas/PortInfo'
          description: Information regarding local opened port.
        protocol:
          type: string
          description: Protocol used in the communication.
          enum:
            - tcp
            - udp
            - tcp6
            - udp6
        remote:
          $ref: '#/components/schemas/PortInfo'
          description: Information regarding the remote port the machine is connected to.
        rx_queue:
          type: integer
          format: int32
          minimum: 0
          description: Packets at the receiver queue.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        state:
          type: string
          description: Communication status.
          enum:
          - established
          - syn_sent
          - syn_recv
          - fin_wait1
          - fin_wait2
          - time_wait
          - close
          - close_wait
          - last_ack
          - listening
          - closing
          - delete_tcp
          - unknown
        tx_queue:
          type: integer
          format: int32
          minimum: 0
          description: Packets pending to be transmitted.
        agent_id:
          $ref: '#/components/schemas/AgentID'
        pid:
          type: integer
          format: int32
          description: PID owner of the opened port.
        process:
          type: string
          format: alphanumeric
          description: Name of the PID.

    SyscollectorProcess:
      type: object
      properties:
        argvs:
          type: string
          description: Process received arguments.
        cmd:
          type: string
          description: Executed command.
        egroup:
          type: string
          description: Effective group.
        euser:
          type: string
          description: Effective user.
        fgroup:
          type: string
          description: Filesystem group name.
        name:
          type: string
          description: Process name.
        nice:
          type: integer
          format: int32
          description: Nice value of the process
        nlwp:
          type: integer
          format: int32
          description: Number of light weight processes.
        pgrp:
          type: integer
          format: int32
          description: Process group.
        pid:
          type: string
          description: Process PID.
        ppid:
          type: integer
          format: int32
          minimum: 0
          description: Process parent PID.
        priority:
          type: integer
          format: int32
          description: Kernel scheduling priority.
        processor:
          type: integer
          format: int32
          minimum: 0
          description: Processor number which is running the process.
        resident:
          type: integer
          format: int32
          description: Process resident size in bytes.
        rgroup:
          type: string
          description: Real group.
        ruser:
          type: string
          description: Real user.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        session:
          type: integer
          format: int32
          description: Process session.
        sgroup:
          type: string
          description: Saved-set group
        share:
          type: integer
          format: int32
          minimum: 0
          description: Shared memory.
        size:
          type: integer
          format: int32
          minimum: 0
          description: Process size in bytes.
        start_time:
          type: integer
          format: int64
          description: Time when the process started.
        state:
          type: string
          description: Process state.
        stime:
          type: integer
          format: int32
          minimum: 0
          description: Time spent executing system code.
        suser:
          type: string
          description: Saved-set user.
        tgid:
          type: integer
          format: int32
          description: Thread Group ID.
        tty:
          type: integer
          format: int32
          description: Process TTY number.
        utime:
          type: integer
          format: int32
          description: Time spent executing user code.
        vm_size:
          type: integer
          format: int32
          minimum: 0
          description: Total VM size (KB)
        agent_id:
          $ref: '#/components/schemas/AgentID'

    # Lists models
    CDBList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        path:
          type: string
          format: etc_path
          description: Filepath that contains the returned CDB definitions.

    CDBListFile:
      type: object
      required:
        - folder
        - name
        - path
      properties:
        folder:
          type: string
          format: path
          description: Folder path where the CDB list file is contained
        name:
          type: string
          description: Name of the CDB list file.
        path:
          type: string
          format: etc_path
          description: File path of the CDB list. This path is relative to the Wazuh installation path.

    CDBListPair:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Value of the CDB list item key.
        value:
          type: string
          description: Value of the CDB list item value.

    # Overview models
    OverviewAgents:
      type: object
      required:
        - agent_os
        - agent_status
        - agent_version
        - groups
        - last_registered_agent
        - nodes
      properties:
        nodes:
          type: array
          description: Active nodes in the cluster.
          items:
            type: object
            properties:
              count:
                type: integer
                format: int32
              node_name:
                type: string
        groups:
          type: array
          description: Recount of the number of Wazuh agents group by Wazuh groups.
          items:
            $ref: '#/components/schemas/AgentGroup'
        agent_os:
          type: array
          description: Recount of the number of Wazuh agents group by OS.
          items:
            type: object
            properties:
              count:
                type: integer
                format: int32
              os:
                type: object
                properties:
                  name:
                    type: string
                    format: alphanumeric
                  platform:
                    type: string
                    format: alphanumeric
                  version:
                    type: string
                    format: alphanumeric
        agent_status:
          $ref: '#/components/schemas/AgentsSummaryStatus'
        agent_version:
          type: array
          description: Recount of the number of Wazuh agents group by version.
          items:
            type: object
            properties:
              count:
                type: integer
                format: int32
              version:
                type: string
                format: alphanumeric
        last_registered_agent:
          type: array
          items:
            $ref: '#/components/schemas/Agent'

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: "Intended method to get a token"
      x-basicInfoFunc: api.authentication.check_user
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.authentication.decode_token

  parameters:
    agent_id:
      in: path
      name: agent_id
      description: Agent ID. All possible values since 000 onwards.
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    agent_name:
      in: path
      name: agent_name
      description: Agent name used when the agent was registered.
      required: true
      schema:
        type: string
        format: names
        maxLength: 128
    benchmark:
      in: query
      name: benchmark
      description: Filters by benchmark type.
      schema:
        type: string
        format: alphanumeric
    component:
      in: path
      name: component
      description: Selected agent's component.
      required: true
      schema:
        type: string
        enum:
        - agent
        - agentless
        - analysis
        - auth
        - com
        - csyslog
        - integrator
        - logcollector
        - mail
        - monitor
        - request
        - syscheck
        - wmodules
    configuration:
      in: path
      name: configuration
      description: |
        <p>Selected agent's configuration to read. The configuration to read depends on the selected component. The following table shows all available combinations of component and configuration values:</p>
        <table class="table table-striped table-bordered">
        <thead>
        <tr>
        <th>Component</th>
        <th>Configuration</th>
        <th>Tag</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td>agent</td>
        <td>client</td>
        <td><code>&lt;client&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>buffer</td>
        <td><code>&lt;client_buffer&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>labels</td>
        <td><code>&lt;labels&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>internal</td>
        <td>agent, monitord, remoted</td>
        </tr>
        <tr>
        <td>agentless</td>
        <td>agentless</td>
        <td><code>&lt;agentless&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>global</td>
        <td><code>&lt;global&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>active_response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>alerts</td>
        <td><code>&lt;alerts&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>command</td>
        <td><code>&lt;command&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>rules</td>
        <td><code>&lt;rule&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>decoders</td>
        <td><code>&lt;decoder&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>internal</td>
        <td>analysisd</td>
        </tr>
        <tr>
        <td>auth</td>
        <td>auth</td>
        <td><code>&lt;auth&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>active-response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>internal</td>
        <td>execd</td>
        </tr>
        <tr>
        <td>com</td>
        <td>cluster</td>
        <td>cluster</td>
        </tr>
        <tr>
        <td>csyslog</td>
        <td>csyslog</td>
        <td><code>&lt;csyslog_output&gt;</code></td>
        </tr>
        <tr>
        <td>integrator</td>
        <td>integration</td>
        <td><code>&lt;integration&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>localfile</td>
        <td><code>&lt;localfile&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>socket</td>
        <td><code>&lt;socket&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>internal</td>
        <td>logcollector</td>
        </tr>
        <tr>
        <td>mail</td>
        <td>global</td>
        <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>alerts</td>
        <td><code>&lt;email_alerts&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>internal</td>
        <td>maild</td>
        </tr>
        <tr>
        <td>monitor</td>
        <td>internal</td>
        <td>monitord</td>
        </tr>
        <tr>
        <td>request</td>
        <td>remote</td>
        <td><code>&lt;remote&gt;</code></td>
        </tr>
        <tr>
        <td>request</td>
        <td>internal</td>
        <td>remoted</td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>syscheck</td>
        <td><code>&lt;syscheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>rootcheck</td>
        <td><code>&lt;rootcheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>internal</td>
        <td>syscheck, rootcheck</td>
        </tr>
        <tr>
        <td>wmodules</td>
        <td>wmodules</td>
        <td><code>&lt;wodle&gt;</code></td>
        </tr>
        </tbody>
        </table>
      required: true
      schema:
        type: string
        enum:
        - client
        - buffer
        - labels
        - internal
        - agentless
        - global
        - active_response
        - alerts
        - command
        - rules
        - decoders
        - auth
        - active-response
        - cluster
        - csyslog
        - integration
        - localfile
        - socket
        - remote
        - syscheck
        - rootcheck
        - wmodules
    decoder_name:
      in: query
      name: decoder_names
      description: Decoder name.
      schema:
        type: array
        items:
          type: string
          format: names
    description:
      in: query
      name: description
      description: Filters by policy description.
      schema:
        type: string
        format: alphanumeric
    directory:
      in: query
      name: directory
      description: Filters by directory.
      schema:
        type: string
    downloadFile:
      in: path
      name: file
      required: True
      description: File name to download.
      schema:
        type: string
        format: alphanumeric
    error:
      in: query
      name: error
      description: Filters by encountered errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    fail:
      in: query
      name: fail
      description: Filters by failed checks.
      schema:
        type: integer
        format: int32
        minimum: 0
    fields:
      in: query
      name: fields
      description: List of fields affecting the operation.
      schema:
        type: array
        items:
          type: string
          format: names
    file:
      in: query
      name: file
      description: Filters by filename.
      schema:
        type: array
        items:
          type: string
          format: alphanumeric
    full_path_filter:
      in: query
      name: file
      description: Filters by full path.
      schema:
        type: string
        format: paths
    file_name:
      in: path
      name: file_name
      description: Filename.
      required: true
      schema:
        type: string
        format: alphanumeric
    file_format:
      in: query
      name: format
      description: Select output format to return the file. JSON will format the file in JSON format and XML will return the XML raw file in a string.
      schema:
        type: string
        format: alphanumeric
    group_id:
      in: path
      name: group_id
      description: Group ID. (Name of the group)
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    agent_group:
      in: query
      name: group
      description: Filters by group of agents.
      schema:
        $ref: '#/components/schemas/GroupID'
    hash:
      in: query
      name: hash
      description: Select algorithm to generate the returned checksums.
      schema:
        type: string
        enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
    hotfix:
      in: query
      name: hotfix
      description: Filters by hotfix
      schema:
        type: string
    limit:
      in: query
      name: limit
      description: Maximum number of elements to return
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
    list_agents:
      in: query
      name: list_agents
      description: List of agents IDs (separated by comma)
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    list_groups:
      in: query
      name: list_groups
      description: Array of group's IDs
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    list_policies:
      in: query
      name: list_policies
      description: Array of policy's IDs
      schema:
        type: array
        items:
          type: integer
          minLength: 1
          minimum: 2
          description: Policy ID.
    list_nodes:
      in: query
      name: list_nodes
      description: List of node IDs (separated by comma)
      schema:
        type: array
        items:
          type: string
    manager_host:
      in: query
      name: manager
      description: Filters by manager hostname which agents are connected to.
      schema:
        type: string
        format: alphanumeric
    name:
      in: query
      name: name
      description: Filters by agent name.
      schema:
        type: string
        format: alphanumeric
    sca_name:
      in: query
      name: name
      description: Filters by policy name.
      schema:
        type: string
    notchecked:
      in: query
      name: notchecked
      description: Filters by not checked.
      schema:
        type: integer
        format: int32
        minimum: 0
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: |
        Filters out agents which time lapse from last keep alive signal is longer than specified. Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never_connected agents, uses the register date. For example, `7d`, `10s` and `10` are valid values. When no time unit is specified, seconds are used.
      schema:
        type: string
        format: timeframe
    pass:
      in: query
      name: pass
      description: Filters by passed checks.
      schema:
        type: integer
        format: int32
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    process:
      in: query
      name: process
      description: Filters by process name.
      schema:
        type: string
        format: alphanumeric
    profile:
      in: query
      name: profile
      description: Filters by evaluated profile.
      schema:
        type: string
        format: alphanumeric
    policy_id:
      in: path
      name: policy_id
      description: Filters by policy id.
      required: true
      schema:
        type: string
        format: alphanumeric
    policy_id_rbac:
      in: path
      name: policy_id
      description: 'Specified a policy id'
      required: true
      schema:
        $ref: '#/components/schemas/Policy_id'
    policy_ids_rbac:
      in: query
      name: 'policy_ids'
      description: 'List of policy ids'
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Policy_id'
    policy_ids_rbac_required:
      in: query
      name: 'policy_ids'
      description: 'List of policy ids'
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Policy_id'
    policy_name:
      in: query
      name: policy_name
      description: 'Specified and existent policy name'
      required: True
      schema:
        type: string
    purge:
      in: query
      name: purge
      description: Permanently delete an agent from the key store
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=active&quot;
      schema:
        type: string
#        format: query
    rationale:
      in: query
      name: rationale
      description: Filters by rationale.
      schema:
        type: string
        format: alphanumeric
    registry:
      in: query
      name: registry
      description: Filters by registry.
      schema:
        type: string
        format: alphanumeric
    references:
      in: query
      name: references
      description: Filters by references.
      schema:
        type: string
    remediation:
      in: query
      name: remediation
      description: Filters by remediation.
      schema:
        type: string
    rule_requirement:
      in: path
      name: requirement
      required: true
      schema:
        type: string
        enum: [pci, gdpr, hipaa, nist-800-53, gpg13]
    result:
      in: query
      name: result
      description: Filters by result.
      schema:
        type: string
        format: alphanumeric
    condition:
      in: query
      name: condition
      description: Filters by condition.
      schema:
        type: string
    role_id:
      in: path
      name: role_id
      description: 'Specified a role id'
      required: true
      schema:
        $ref: '#/components/schemas/Role_id'
    role_ids:
      in: query
      name: 'role_ids'
      description: 'List of role ids'
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Role_id'
    role_name:
      in: query
      name: role_name
      description: 'Specified and existent role name'
      required: True
      schema:
        type: string
    rule_ids:
      in: query
      name: rule_ids
      description: List of rule IDs.
      schema:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
    rulesetPath:
      in: query
      name: path
      description: Filters by path.
      schema:
        type: string
        format: ruleset_path
    score:
      in: query
      name: score
      description: Filters by final score.
      schema:
        type: integer
        format: int32
        minimum: 0
    search:
      in: query
      name: search
      description: |
        Looks for elements with the specified string. If want the complementary search, put a '-' at the
        beginning.
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: |
        Select which fields to return (separated by comma). Use '.' for nested fields. For example, "{field1: field2}" may be selected with "field1.field2".
      schema:
        type: array
        items:
          type: string
          format: names
    # It'd be more appropriate to be an array of strings, and separate the ascending or descending order in another param
    sort:
      in: query
      name: sort
      description: |
        Sorts the collection by a field or fields (separated by comma). Use +/- at the beginning to list in ascending or descending order.
        Use '.' for nested fields. For example, "{field1: field2}" may be selected with "field1.field2".
      schema:
        type: string
        format: sort
    statusAgentParam:
      in: query
      name: status
      description: Filters by agent status. Use commas to enter multiple statuses.
      schema:
        type: array
        items:
          type: string
          enum:
          - active
          - pending
          - never_connected
          - disconnected
        minItems: 1

    statusRLDParam:
      in: query
      name: status
      description: Filters by list status. Use commas to enter multiple statuses.
      schema:
        type: string
        enum:
        - enabled
        - disabled
        - all
        minItems: 1
    title:
      in: query
      name: title
      description: Filters by title.
      schema:
        type: string
        format: alphanumeric
    type_agents:
      in: query
      name: type
      description: Type of file.
      schema:
        type: array
        items:
          type: string
          enum:
          - conf
          - rootkit_files
          - rootkit_trojans
          - rcl
    type_syscollector:
      in: query
      name: type
      description: Type of network.
      schema:
        type: string
        format: alphanumeric
    typesys:
      in: query
      name: type
      description: Type of file.
      schema:
        type: string
    unknown:
      in: query
      name: unknown
      description: Filters by unknown results.
      schema:
        type: integer
        format: int32
    version:
      in: query
      name: version
      description: Filters by agents version.
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    node_type:
      in: query
      name: type
      description: Filters by node type.
      schema:
        type: string
        enum:
        - worker
        - master
    node_id:
      in: path
      name: node_id
      description: Cluster node name.
      required: true
      schema:
        type: string
        format: names
    node_name:
      in: query
      name: node_name
      description: Filters by node name.
      schema:
        type: string
        format: names
    section:
      in: query
      name: section
      description: Indicates the wazuh configuration section
      schema:
        type: string
        enum:
        - active-response
        - agentless
        - alerts
        - auth
        - client
        - client_buffer
        - cluster
        - command
        - database_output
        - email_alerts
        - global
        - integration
        - labels
        - localfile
        - logging
        - remote
        - reports
        - rootcheck
        - ruleset
        - sca
        - socket
        - syscheck
        - syslog_output
        # Wodle sections
        - agent-key-polling
        - aws-s3
        - azure-logs
        - cis-cat
        - docker-listener
        - open-scap
        - osquery
        - syscollector
        - vulnerability-detector
    field:
      in: query
      name: field
      description: Indicates a section child, e.g, fields for rule section are include, decoder_dir, etc.
      schema:
        type: string
        format: names
    date:
      in: query
      name: date
      description: Selects the date for getting the statistical information. Format YYYY-MM-DD.
      schema:
        type: string
        format: date
    category:
      in: query
      name: category
      description: Filter by category of log.
      schema:
        type: string
        enum:
        - ossec-agentlessd
        - ossec-analysisd
        - ossec-authd
        - ossec-csyslogd
        - ossec-dbd
        - ossec-execd
        - ossec-integratord
        - ossec-maild
        - ossec-monitord
        - ossec-logcollector
        - ossec-remoted
        - ossec-reportd
        - ossec-rootcheck
        - ossec-syscheckd
        - ossec-testrule
        - sca
        - wazuh-db
        - wazuh-modulesd
        - wazuh-modulesd:agent-key-polling
        - wazuh-modulesd:aws-s3
        - wazuh-modulesd:azure-logs
        - wazuh-modulesd:ciscat
        - wazuh-modulesd:command
        - wazuh-modulesd:database
        - wazuh-modulesd:docker-listener
        - wazuh-modulesd:download
        - wazuh-modulesd:oscap
        - wazuh-modulesd:osquery
        - wazuh-modulesd:syscollector
        - wazuh-modulesd:vulnerability-detector
    type_log:
      in: query
      name: type_log
      description: Filters by log level.
      schema:
        type: string
        enum:
          - all
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
    edit_files_path:
      in: query
      name: path
      description: Filepath to upload/delete file. (Relative to wazuh installation folder)
      required: true
      schema:
        type: string
        format: etc_file_path
    get_files_path:
      in: query
      name: path
      description: Filepath to return file. (Relative to wazuh installation folder)
      required: true
      schema:
        type: string
        format: etc_and_ruleset_file_path
    etc_and_ruleset_path:
      in: query
      name: path
      description: Path to return.
      schema:
        type: string
        format: etc_and_ruleset_path
    relative_path_filter:
      in: query
      name: path
      description: Filters by path
      schema:
        type: string
        format: etc_file_path
    overwrite:
      in: query
      name: overwrite
      description: If set to false, an exception will be raised when updating contents of an already existing filename.
      schema:
        type: boolean
        default: false
    group:
      in: query
      name: group
      description: Filters by rule group.
      schema:
        type: string
        format: alphanumeric
    level:
      in: query
      name: level
      description: Filters by rule level. Can be a single level (4) or an interval (2-4)
      schema:
        type: string
        format: range
    pci:
      in: query
      name: pci
      description: Filters by PCI requirement name.
      schema:
        type: string
        format: alphanumeric
    gdpr:
      in: query
      name: gdpr
      description: Filters by GDPR requirement.
      schema:
        type: string
        format: alphanumeric
    gpg13:
      in: query
      name: gpg13
      description: Filters by GPG13 requirement.
      schema:
        type: string
        format: alphanumeric
    hipaa:
      in: query
      name: hipaa
      description: Filters by HIPAA requirement.
      schema:
        type: string
        format: alphanumeric
    nist-800-53:
      in: query
      name: nist-800-53
      description: Filters by NIST-800-53 requirement.
      schema:
        type: string
        format: alphanumeric
    rootcheck_status:
      in: query
      name: status
      description: Filter by scan status
      schema:
        type: string
        enum:
        - all
        - outstanding
        - solved
    cis:
      in: query
      name: cis
      description: Filters by CIS requirement.
      schema:
        type: string
        format: alphanumeric
    filetype:
      in: query
      name: type
      description: Filters by file type.
      schema:
        type: string
        enum:
        - file
        - registry
    summary:
      in: query
      name: summary
      description: Returns a summary grouping by filename.
      schema:
        type: boolean
        default: false
    md5:
      in: query
      name: md5
      description: Filters files with the specified MD5 checksum.
      schema:
        type: string
        format: hash
    sha1:
      in: query
      name: sha1
      description: Filters files with the specified SHA1 checksum.
      schema:
        type: string
        format: hash
    sha256:
      in: query
      name: sha256
      description: Filters files with the specified SHA256 checksum.
      schema:
        type: string
        format: hash
    hashfilter:
      in: query
      name: hash
      description: Filters files with the specified hash (md5, sha256 or sha1)
      schema:
        type: string
        format: hash
    ram.free:
      in: query
      name: ram.free
      description: Filters by ram.free.
      schema:
        type: integer
        format: int64
        minimum: 0
    ram.total:
      in: query
      name: ram.total
      description: Filters by ram.total.
      schema:
        type: integer
        format: int64
        minimum: 0
    cpu.cores:
      in: query
      name: cpu.cores
      description: Filters by cpu.cores.
      schema:
        type: integer
        format: int32
        minimum: 1
    cpu.mhz:
      in: query
      name: cpu.mhz
      description: Filters by cpu.mhz.
      schema:
        type: number
        format: float
        minimum: 1
    cpu.name:
      in: query
      name: cpu.name
      description: Filters by cpu.name.
      schema:
        type: string
    board_serial:
      in: query
      name: board_serial
      description: Filters by board_serial.
      schema:
        type: string
        format: alphanumeric
    proto:
      in: query
      name: proto
      description: Filters by IP protocol.
      schema:
        type: string
        format: alphanumeric
    address:
      in: query
      name: address
      description: Filters by IP address.
      schema:
        type: string
        format: alphanumeric
    broadcast:
      in: query
      name: broadcast
      description: Filters by broadcast direction.
      schema:
        type: string
        format: alphanumeric
    netmask:
      in: query
      name: netmask
      description: Filters by netmask.
      schema:
        type: string
        format: alphanumeric
    adapter:
      in: query
      name: adapter
      description: Filters by adapter.
      schema:
        type: string
        format: alphanumeric
    state:
      in: query
      name: state
      description: Filters by state.
      schema:
        type: string
        format: alphanumeric
    mtu:
      in: query
      name: mtu
      description: Filters by mtu.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx.packets:
      in: query
      name: tx.packets
      description: Filters by tx.packets.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx.packets:
      in: query
      name: rx.packets
      description: Filters by rx.packets.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx.bytes:
      in: query
      name: tx.bytes
      description: Filters by tx.bytes.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx.bytes:
      in: query
      name: rx.bytes
      description: Filters by rx.bytes.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx.errors:
      in: query
      name: tx.errors
      description: Filters by tx.errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx.errors:
      in: query
      name: rx.errors
      description: Filters by rx.errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx.dropped:
      in: query
      name: tx.dropped
      description: Filters by tx.dropped.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx.dropped:
      in: query
      name: rx.dropped
      description: Filters by rx.dropped.
      schema:
        type: integer
        format: int32
        minimum: 0
    iface:
      in: query
      name: iface
      description: Filters by network interface.
      schema:
        type: string
        format: alphanumeric
    gateway:
      in: query
      name: gateway
      description: Filters by network gateway.
      schema:
        type: string
        format: alphanumeric
    dhcp:
      in: query
      name: dhcp
      description: Filters by network dhcp (enabled or disabled).
      schema:
          $ref: '#/components/schemas/DHCPStatus'
    os.name:
      in: query
      name: os.name
      description: Filters by OS name.
      schema:
        type: string
        format: alphanumeric
    os.platform:
      in: query
      name: os.platform
      description: Filters by OS platform.
      schema:
        type: string
        format: alphanumeric
    architecture:
      in: query
      name: architecture
      description: Filters by architecture.
      schema:
        type: string
        format: alphanumeric
    os.version:
      in: query
      name: os.version
      description: Filters by OS version.
      schema:
        type: string
        format: alphanumeric
    release:
      in: query
      name: release
      description: Filters by release.
      schema:
        type: string
        format: alphanumeric
    vendor:
      in: query
      name: vendor
      description: Filters by vendor.
      schema:
        type: string
    pid:
      in: query
      name: pid
      description: Filters by pid.
      schema:
        type: string
        format: numbers
    protocol:
      in: query
      name: protocol
      description: Filters by protocol.
      schema:
        type: string
        format: alphanumeric
    list_filepath:
      in: query
      name: path
      description: List file path.
      required: true
      schema:
        type: string
        format: etc_path
    local.ip:
      in: query
      name: local.ip
      description: Filters by Local IP.
      schema:
        type: string
        format: alphanumeric
    local.port:
      in: query
      name: local.port
      description: Filters by Local Port.
      schema:
        type: string
        format: numbers
    remote.ip:
      in: query
      name: remote.ip
      description: Filters by Remote IP.
      schema:
        type: string
        format: alphanumeric
    tx_queue:
      in: query
      name: tx_queue
      description: Filters by tx_queue.
      schema:
        type: string
        format: numbers
    process_pid:
      in: query
      name: pid
      description: Filters by process pid.
      schema:
        type: string
        format: numbers
    process_state:
      in: query
      name: state
      description: Filters by process state.
      schema:
        type: string
        format: alphanumeric
    ppid:
      in: query
      name: ppid
      description: Filters by process parent pid.
      schema:
        type: string
        format: numbers
    egroup:
      in: query
      name: egroup
      description: Filters by process egroup.
      schema:
        type: string
        format: alphanumeric
    euser:
      in: query
      name: euser
      description: Filters by process euser.
      schema:
        type: string
        format: alphanumeric
    fgroup:
      in: query
      name: fgroup
      description: Filters by process fgroup.
      schema:
        type: string
        format: alphanumeric
    process_name:
      in: query
      name: name
      description: Filters by process name.
      schema:
        type: string
        format: alphanumeric
    nlwp:
      in: query
      name: nlwp
      description: Filters by process nlwp.
      schema:
        type: string
        format: numbers
    pgrp:
      in: query
      name: pgrp
      description: Filters by process pgrp.
      schema:
        type: string
        format: numbers
    priority:
      in: query
      name: priority
      description: Filters by process priority.
      schema:
        type: string
        format: numbers
    rgroup:
      in: query
      name: rgroup
      description: Filters by process rgroup.
      schema:
        type: string
        format: alphanumeric
    ruser:
      in: query
      name: ruser
      description: Filters by process ruser.
      schema:
        type: string
        format: alphanumeric
    sgroup:
      in: query
      name: sgroup
      description: Filters by process sgroup.
      schema:
        type: string
        format: alphanumeric
    suser:
      in: query
      name: suser
      description: Filters by process suser.
      schema:
        type: string
        format: alphanumeric
    package_version:
      in: query
      name: version
      description: Filters by version name.
      schema:
        type: string
    older_than:
      in: query
      name: older_than
      description: |
        Consider only agents which last keep alive is older than the specified time frame. For never_connected agents, register date is considered instead of last keep alive. For example, `7d`, `10s` and `10` are valid values. When no time unit is specified, seconds are assumed.
      schema:
        type: string
        format: timeframe
        default: 7d
    ip:
      in: query
      name: ip
      description: Filters by the IP used by the agent to communicate with the manager. If it's not available, it will have the same value as registerIP.
      schema:
        type: string
        format: alphanumeric
    registerIP:
      in: query
      name: registerIP
      description: Filters by the IP used when registering the agent.
      schema:
        type: string
        format: alphanumeric
    force_single_group:
      in: query
      name: force_single_group
      description: Whether to append new group to current agent's multigroup or replace it.
      schema:
        type: boolean
    wpk_repo:
      in: query
      name: wpk_repo
      description: WPK repository.
      schema:
        type: string
        format: path
    use_http:
      in: query
      name: use_http
      description: Use protocol http. If it's false use https. By default the value is set to false.
      schema:
        type: boolean
        default: false
    upgrade_version:
      in: query
      name: version
      description: Wazuh version to upgrade to.
      schema:
        type: string
    force:
      in: query
      name: force
      description: Force upgrade.
      schema:
        type: boolean
        default: false
    file_path:
      in: query
      name: file_path
      description: Path to the WPK file. The file must be on a folder on the Wazuh's installation directory (by default, <code>/var/ossec</code>).
      schema:
        type: string
        format: path
    installer:
      in: query
      name: installer
      description: Installation script.
      schema:
        type: string
        format: alphanumeric
    username:
      in: path
      name: username
      description: 'Specified an username'
      required: True
      schema:
        $ref: '#/components/schemas/Username'
    usernames:
      in: query
      name: usernames
      description: ID of an user.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Username'


tags:
  - name: active-response
    description: 'Agents Active Response'
  - name: agents
    description: 'Agents management related operations'
  - name: ciscat
    description: 'Retrieve information from CIS-CAT scans.'
  - name: cluster
    description: 'Wazuh cluster and nodes management'
  - name: decoders
    description: 'Decoders management'
  - name: experimental
    description: 'Not ready for production endpoints. Use with caution'
  - name: lists
    description: 'CDB lists management'
  - name: manager
    description: 'Wazuh manager management'
  - name: overview
    description: 'Overwiew of Wazuh'
  - name: rootcheck
    description: 'Detection of rootkit, ports and hidden processes and many other scans.'
  - name: rules
    description: 'Rules management'
  - name: sca
    description: 'Policy monitoring'
  - name: security
    description: 'Roles administration and user authentication management'
  - name: syscheck
    description: 'File integrity monitoring.'
  - name: syscollector
    description: 'Syscollector information'

security:
  - jwt: []

paths:
  /:
    get:
      summary: 'Root-endpoint info'
      description: 'Returns various basic information about the API'
      operationId: api.controllers.default_controller.default_info
      responses:
        '200':
          description: 'API default info'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BasicInfo'
              example:
                title: "Wazuh API"
                api_version: "v4.0.0"
                revision: 4000
                license_name: "GPL 2.0"
                license_url: "https://github.com/wazuh/wazuh/blob/master/LICENSE"
                hostname: "wazuh"
                timestamp: "2019-04-02T08:08:11+0000"

  /active-response:
    put:
      tags:
        - active-response
      summary: 'Run AR command in all agents'
      description: 'Runs an Active Response command on all agents'
      operationId: api.controllers.active_response_controller.run_command
      parameters:
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveResponseBody'
      responses:
        '200':
          description: 'Command sent to agents'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Command sent to shown agents."
        default:
          $ref: '#/components/responses/ResponseError'

  /agents:
    delete:
      tags:
      - agents
      summary: Delete agents
      description: Deletes all agents or a list of them with optional criteria based on the status or time of the last connection.
      operationId: api.controllers.agents_controller.delete_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/purge'
        - $ref: '#/components/parameters/statusAgentParam'
        - $ref: '#/components/parameters/older_than'
      responses:
        '200':
          description: Delete agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                        - type: object
                          properties:
                            older_than:
                              type: string
                              format: timeframe
                              description: Returns older than parameter used. It can be the default value or the parameter send by the user.
              example:
                data:
                  affected_items:
                    - '001'
                    - '002'
                    - '003'
                  older_than: 1s
                  total_affected_items: 3
                message: All shown agents were deleted
        default:
          $ref: '#/components/responses/ResponseError'
    get:
      tags:
      - agents
      summary: 'Get agents'
      description: 'Returns information about all available agents or a list of them'
      operationId: api.controllers.agents_controller.get_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusAgentParam'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/os.platform'
        - $ref: '#/components/parameters/os.version'
        - $ref: '#/components/parameters/os.name'
        - $ref: '#/components/parameters/manager_host'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/node_name'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/ip'
        - $ref: '#/components/parameters/registerIP'
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - configSum: 29e0926e5a77442212e824868a2a61df
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group1
                      id: '001'
                      ip: 172.18.0.6
                      lastKeepAlive: '2019-10-16T09:13:34Z'
                      manager: wazuh-worker2
                      mergedSum: a13d9b2edc5bdd5ef7331c0d5b9ecf34
                      name: wazuh-agent1
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent1 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: e2f47d482da37c099fa1d6e4c43b523c
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group2
                      id: '002'
                      ip: 172.18.0.7
                      lastKeepAlive: '2019-10-16T09:13:28Z'
                      manager: wazuh-worker2
                      mergedSum: d6fde33dc232d8f91359b2e98994c933
                      name: wazuh-agent2
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent2 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: dadc074e9a4f036c5d905c280c3b5bcc
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group3
                      id: '003'
                      ip: 172.18.0.8
                      lastKeepAlive: '2019-10-16T09:13:29Z'
                      manager: wazuh-master
                      mergedSum: e40515ffa928c72ee167ed41d88245c4
                      name: wazuh-agent3
                      node_name: master-node
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent3 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                  total_affected_items: 3
                message: All selected agents information is shown
        default:
          $ref: '#/components/responses/ResponseError'
    post:
      tags:
      - agents
      summary: 'Add agent'
      description: 'Adds a new agent.'
      operationId: api.controllers.agents_controller.add_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
              schema:
                properties:
                  name:
                    description: Agent name.
                    type: string
                    format: names
                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option behind_proxy_server to yes at api.yaml and make sure the proxy is setting HTTP header 'X-Forwarded-For' with origin IP address. Allowed values: IP, IP/NET, ANY"
                    type: string
                    format: alphanumeric
                  force_time:
                    description: Remove the old agent with the same IP if disconnected since <force_time> seconds.
                    type: integer
                    format: int32
                    minimum: 0
                required:
                - name
              example:
                name: NewHost_2
                ip: 10.0.10.11
      responses:
        '200':
          description: 'Add an agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: "007"
                  key: MDA3IE5ld0hvc3QgMTAuMC4wLjkgZTk5MDE2ZTkzMjMyZDBjZDYyMGIyZTZmMTM2ZjMzMDQxMjY3M2E0NGRmOTNmODk1NzFjMGQyYzczY2VlYzRhZQ==
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}:
    delete:
      tags:
        - agents
      summary: 'Delete an agent'
      description: 'Deletes an agent.'
      operationId: api.controllers.agents_controller.delete_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/purge'
      responses:
        '200':
          description: 'Delete an agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                        - type: object
                          properties:
                            older_than:
                              type: string
                              format: timeframe
                              description: Returns older than parameter used when deleting the agent.
              example:
                data:
                  affected_items:
                    - '003'
                  older_than: 0s
                  total_affected_items: 1
                message: All selected agents were deleted
        default:
          $ref: '#/components/responses/ResponseError'
    get:
      tags:
        - agents
      summary: 'Get an agent'
      description: 'Returns various information from an agent.'
      operationId: api.controllers.agents_controller.get_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - configSum: e2f47d482da37c099fa1d6e4c43b523c
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group2
                      id: '002'
                      ip: 172.18.0.7
                      lastKeepAlive: '2019-10-16T09:34:58Z'
                      manager: wazuh-worker2
                      mergedSum: d6fde33dc232d8f91359b2e98994c933
                      name: wazuh-agent2
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent2 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                  total_affected_items: 1
                message: All selected agents information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/config/{component}/{configuration}:
    get:
      tags:
        - agents
      summary: 'Get active configuration'
      description: 'Returns the active configuration the agent is currently using. This can be different from the configuration present in the configuration file, if it has been modified and the agent has not been restarted yet.'
      operationId: api.controllers.agents_controller.get_agent_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'
      responses:
        '200':
          description: 'Get agent configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentConfiguration'
              example:
                data:
                  localfile:
                    - alias: df -P
                      command: df -P
                      frequency: 360
                      ignore_binaries: 'no'
                      logformat: command
                      only-future-events: 'yes'
                      target:
                        - agent
                    - alias: netstat listening ports
                      command: netstat -tulpn | sed 's/\([[:alnum:]]\+\)\ \+[[:digit:]]\+\ \+[[:digit:]]\+\
                        \+\(.*\):\([[:digit:]]*\)\ \+\([0-9\.\:\*]\+\).\+\ \([[:digit:]]*\/[[:alnum:]\-]*\).*/\1
                        \2 == \3 == \4 \5/' | sort -k 4 -g | sed 's/ == \(.*\) ==/:\1/' | sed 1,2d
                      frequency: 360
                      ignore_binaries: 'no'
                      logformat: full_command
                      only-future-events: 'yes'
                      target:
                        - agent
                    - alias: last -n 20
                      command: last -n 20
                      frequency: 360
                      ignore_binaries: 'no'
                      logformat: full_command
                      only-future-events: 'yes'
                      target:
                        - agent
                    - file: "/var/ossec/logs/active-responses.log"
                      ignore_binaries: 'no'
                      logformat: syslog
                      only-future-events: 'yes'
                      target:
                        - agent
                    - file: "/var/log/dpkg.log"
                      ignore_binaries: 'no'
                      logformat: syslog
                      only-future-events: 'yes'
                      target:
                        - agent
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group:
    delete:
      tags:
        - agents
      summary: 'Remove agent from groups'
      description: 'Removes the agent from all groups or a list of them. The agent will automatically revert to the "default" group if it is removed from all its assigned groups.'
      operationId: api.controllers.agents_controller.delete_single_agent_multiple_groups
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/list_groups'
      responses:
        '200':
          description: 'Remove the agent from all groups'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseGroupIDs'
              example:
                data:
                  affected_items:
                    - group1
                  total_affected_items: 1
                message: Agent removed from shown groups
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group/is_sync:
    get:
      tags:
        - agents
      summary: 'Get agent configuration sync status'
      description: 'Returns whether the agent configuration has been synchronized with the agent or not. This can be useful to check after updating a group configuration.'
      operationId: api.controllers.agents_controller.get_sync_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent sync'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentsSynced'
              example:
                data:
                  affected_items:
                    - id: '002'
                      synced: true
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: Sync info shown for all selected agents.
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove an agent from a specific group'
      description: 'Removes an agent from an specified group. If the agent has multigroups, it will preserve all previous groups except the last one.'
      operationId: api.controllers.agents_controller.delete_single_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove agent from a group'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Agent '004' removed from group 'dmz'."
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
        - agents
      summary: 'Assign an agent to a group'
      description: 'Assign an agent to a specified group'
      operationId: api.controllers.agents_controller.put_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: 'Add agent to group'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group '004' already belongs to group 'dmz'."
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/key:
    get:
      tags:
        - agents
      summary: 'Get agent key'
      description: 'Returns the key of an agent.'
      operationId: api.controllers.agents_controller.get_agent_key
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent key'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentsKeys'
              example:
                data:
                  affected_items:
                    - id: '002'
                      key: MDAyIHdhenVoLWFnZW50MiBhbnkgMzAxYzk0Y2I3NDc5MzliMjAyYTg0OGE3NGIwMTNkODQwZWJkNWUyZmIxMjQ3NzhlNDhjYzUxOGE4MWQyNDFkYw==
                  total_affected_items: 1
                message: Shown keys for all selected agents
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/restart:
    put:
      tags:
        - agents
      summary: 'Restart an agent'
      description: 'Restarts the specified agent.'
      operationId: api.controllers.agents_controller.restart_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Agent restarted'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
                example:
                  message: All selected agents were restarted
                  data:
                    affected_items:
                      - "007"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using online repository'
      description: 'Upgrade the agent using a WPK file from online repository.'
      operationId: api.controllers.agents_controller.put_upgrade_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/wpk_repo'
        - $ref: '#/components/parameters/upgrade_version'
        - $ref: '#/components/parameters/use_http'
        - $ref: '#/components/parameters/force'
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Upgrade procedure started"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade_custom:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using a custom file'
      description: 'Upgrade the agent using a local WPK file.'
      operationId: api.controllers.agents_controller.put_upgrade_custom_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/file_path'
        - $ref: '#/components/parameters/installer'
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Installation started"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_name}:
    post:
      tags:
        - agents
      summary: 'Add agent (quick method)'
      description: 'Adds a new agent with name `agent_name`. This agent will use `any` as IP.'
      operationId: api.controllers.agents_controller.post_new_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
      responses:
        '200':
          description: 'Agent added'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: "008"
                  key: MDA4IG15TmV3QWdlbnQgYW55IDIyNGVmNmI4NjYyMDk5OTc5NzdiZWJhNDRmZTAyNDI0NjU2ZDM1NjhjNWJiZWI4Njk0M2JkMzdjZjA5YjZlM2M=
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade_result:
    get:
      tags:
        - agents
      summary: 'Get upgrade result from agent'
      description: 'Returns the upgrade result after updating an agent.'
      operationId: api.controllers.agents_controller.get_agent_upgrade
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: timeout
          description: Seconds to wait for the agent to respond.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Get agent upgrade result'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent upgraded successfully
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove agents assignment from a single group.'
      description: 'Remove all agents assignment or a list of them from the specified group.'
      operationId: api.controllers.agents_controller.delete_multiple_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove multiple agents assignment from a single group.'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '002'
                    - '006'
                    - '008'
                    - '010'
                  total_affected_items: 4
                message: All selected agents were removed from group testserver
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
        - agents
      summary: 'Assign agents to a single group'
      description: 'Assign all agents or a list of them to the specified group.'
      operationId: api.controllers.agents_controller.put_multiple_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: 'Assign multiple agents to a single group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '001'
                    - '002'
                  failed_items:
                    - error:
                        code: 1701
                        message: Agent does not exist
                        remediation: Please, use `GET /agents?select=id,name` to find all available agents
                      id:
                        - '999'
                    - error:
                        code: 1753
                        message: Could not assign group. Agent status is never_connected
                        remediation: Please select another agent or connect your agent before assigning groups
                      id:
                        - '011'
                  total_affected_items: 2
                  total_failed_items: 2
                message: Some agents were not assigned to group2 and removed from the other groups
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups:
    delete:
      tags:
        - agents
      summary: 'Delete groups'
      description: 'Deletes all groups or a list of them'
      operationId: api.controllers.agents_controller.delete_groups
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_groups'
      responses:
        '200':
          description: 'Remove multiple group of multiple agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseGroupIDs'
                      - $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                data:
                  affected_agents:
                    - '002'
                    - '005'
                    - '003'
                  affected_items:
                    - 'webserver'
                    - 'dataserver'
                  total_affected_items: 2
                  total_failed_items: 0
                  message: All selected groups were deleted
        default:
          $ref: '#/components/responses/ResponseError'

    get:
      tags:
        - agents
      summary: 'Get groups'
      description: 'Get information about all groups or a list of them. Returns a list containing basic information about each group such as number of agents belonging to the group and the checksums of the configuration and shared files.'
      operationId: api.controllers.agents_controller.get_list_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_groups'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'List all groups'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseGroups'
              example:
                data:
                  affected_items:
                    - count: 2
                      name: default
                      mergedSum: f8d49771911ed9d5c45b03a40babd065
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                    - count: 3
                      name: dmz
                      mergedSum: 220d6c5fc253f251827ee7487341c0fc
                      configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                    - count: 0
                      name: pciserver
                      mergedSum: 220d6c5fc253f251827ee7487341c0fc
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                  total_affected_items: 3
                message: Obtained information about all selected groups
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Delete group'
      description: 'Deletes a group. Agents that were assigned only to the deleted group will automatically revert to the "default" group.'
      operationId: api.controllers.agents_controller.delete_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Delete a group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseGroupIDs'
                      - $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                data:
                  affected_agents:
                    - '002'
                    - '005'
                    - '003'
                  affected_items:
                    - 'webserver'
                  total_affected_items: 1
                  total_failed_items: 0
                  message: All selected groups were deleted
        default:
          $ref: '#/components/responses/ResponseError'

    get:
      tags:
        - agents
      summary: 'Get agents in a group'
      description: 'Returns the list of agents that belongs to the specified group.'
      operationId: api.controllers.agents_controller.get_agents_in_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusAgentParam'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - configSum: 29e0926e5a77442212e824868a2a61df
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group1
                      id: '001'
                      ip: 172.18.0.6
                      lastKeepAlive: '2019-10-16T09:13:34Z'
                      manager: wazuh-worker2
                      mergedSum: a13d9b2edc5bdd5ef7331c0d5b9ecf34
                      name: wazuh-agent1
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent1 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: e2f47d482da37c099fa1d6e4c43b523c
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group2
                      id: '002'
                      ip: 172.18.0.7
                      lastKeepAlive: '2019-10-16T09:13:28Z'
                      manager: wazuh-worker2
                      mergedSum: d6fde33dc232d8f91359b2e98994c933
                      name: wazuh-agent2
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent2 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: dadc074e9a4f036c5d905c280c3b5bcc
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group3
                      id: '003'
                      ip: 172.18.0.8
                      lastKeepAlive: '2019-10-16T09:13:29Z'
                      manager: wazuh-master
                      mergedSum: e40515ffa928c72ee167ed41d88245c4
                      name: wazuh-agent3
                      node_name: master-node
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent3 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                  total_affected_items: 3
                message: All selected agents information is shown
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - agents
      summary: 'Create a group'
      description: 'Creates a new group.'
      operationId: api.controllers.agents_controller.post_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Add new agent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group 'pciserver' created"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/configuration:
    get:
      tags:
        - agents
      summary: 'Get group configuration'
      description: 'Returns the group configuration defined in the `agent.conf` file.'
      operationId: api.controllers.agents_controller.get_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'Get group configuration'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/ListMetadata'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/GroupConfiguration'
              example:
                data:
                  - filters:
                      os: Linux
                  - config:
                      localfile:
                      - location: /var/log/linux.log
                      - log_format: syslog
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
        - agents
      summary: 'Update group configuration'
      description: "Update an specified group's configuration. This API call expects a full valid XML file with the shared configuration tags/syntax."
      operationId: api.controllers.agents_controller.put_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'

      requestBody:
        required: true
        content:
          application/xml:
            schema:
              properties:
                tmp_file:
                  description: Updated file
                  type: string

      responses:
        '200':
          description: 'Upload configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was updated successfully
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/files:
    get:
      tags:
        - agents
      summary: 'Get group files'
      description: 'Return the files placed under the group directory.'
      operationId: api.controllers.agents_controller.get_group_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'Get group files'
          content:
            application/json:
              schema:
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/ListMetadata'
                      - $ref: '#/components/schemas/GroupFile'

              example:
                data:
                  totalItems: 24
                  items:
                    - filename: agent.conf
                      hash: ab73af41699f13fdd81903b5f23d8d00
                    - filename: ar.conf
                      hash: 76d8be9b97d8eae4c239e530ee7e71c8
                    - filename: cis_apache2224_rcl.txt
                      hash: 3c2469443a08b01c454ca35558cb9fa6
                    - filename: cis_debian_linux_rcl.txt
                      hash: cc12fdba595817758f308024f61acb71
                    - filename: cis_mysql5-6_community_rcl.txt
                      hash: f5f770160baf596373e4f77f987cc422
                    - filename: cis_mysql5-6_enterprise_rcl.txt
                      hash: de9865c809f1555d537e5a49872eaf4c
                    - filename: cis_rhel5_linux_rcl.txt
                      hash: a3af38b3f81a48332c7bcd9cf8aa6eff
                    - filename: cis_rhel6_linux_rcl.txt
                      hash: bdcfa3ab90b553f8e5c84cfa9fd90289
                    - filename: cis_rhel7_linux_rcl.txt
                      hash: 039e579029e3edcf8241fb391f46b12f
                    - filename: cis_rhel_linux_rcl.txt
                      hash: 569cd8a2cc7527cc75f81f77098de461
                    - filename: cis_sles11_linux_rcl.txt,
                      hash: d86ee36d384930293cbcc83c8fb57c93
                    - filename: cis_sles12_linux_rcl.txt
                      hash: 6f58710fa8eef659dc782a3fa4699e33
                    - filename: cis_win2012r2_domainL1_rcl.txt
                      hash: 8819dfa3523933b113e27a85fc9e568d
                    - filename: cis_win2012r2_domainL2_rcl.txt
                      hash: e8a2c7ab57bc8102b237f061b8f82dce
                    - filename: cis_win2012r2_memberL1_rcl.txt
                      hash: 38c88156d03af9372efd620e6e57d473
                    - filename: cis_win2012r2_memberL2_rcl.txt
                      hash: c4b62b3e01b5f5634a9719eb8a104028
                    - filename: merged.mg
                      hash: f8d49771911ed9d5c45b03a40babd065
                    - filename: rootkit_files.txt
                      hash: e5ddcac443143cef6237d5f9b8d48585
                    - filename:  rootkit_trojans.txt
                      hash: 6bcf7016d3e6b4c7faa62cf265c24dcc
                    - filename: system_audit_rcl.txt
                      hash: be69b84dd5ee73200bb903a46270e18c
                    - filename: system_audit_ssh.txt
                      hash: 407c1f5e103f0cb58249eb7252a84797
                    - filename: win_applications_rcl.txt
                      hash: 0a4ad12c8145aca8a28d31de5c448b48
                    - filename: win_audit_rcl.txt
                      hash: 92d8011facc8b921ece301ea4ce6a616
                    - filename: win_malware_rcl.txt
                      hash: 6a8d3c63a0e77dea35aaed3ee2cca3a1
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/files/{file_name}/json:
    get:
      tags:
        - agents
      summary: 'Get a file in group'
      description: 'Returns the contents of the specified group file parsed to JSON.'
      operationId: api.controllers.agents_controller.get_group_file_json
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'
        - $ref: '#/components/parameters/type_agents'
      responses:
        '200':
          description: 'Get group file in json format'
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - type: array
                      - type: object
                        description: "The output format depends on the type of file that has been requested: rootkit file, rootkit trojans or rcl."
              example:
                data:
                  vars:
                  controls:
                    - condition: all required
                      name: CIS - Testing against the CIS Debian Linux Benchmark v1
                      reference: CIS_Debian_Benchmark_v1.0pdf
                      checks:
                        - f:/etc/debian_version
                    - name: "CIS - Debian Linux - 1.4 - Robust partition scheme - /tmp is not on its own partition"
                      condition: "any"
                      reference: "https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Benchmark_v1.0.pdf"
                      checks:
                        - "f:/etc/fstab -> !r:/tmp;"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/files/{file_name}/xml:
    get:
      tags:
        - agents
      summary: 'Get a file in group'
      description: 'Returns the contents of the specified group file parsed to XML.'
      operationId: api.controllers.agents_controller.get_group_file_xml
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'
        - $ref: '#/components/parameters/type_agents'
      responses:
        '200':
          description: 'Get group file in xml format'
          content:
            application/xml:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/insert:
    post:
      tags:
        - agents
      summary: 'Add an agent specifying all its basic properties'
      description: 'Adds an agent specifying its name, ID and IP. If an agent with the same ID already exists, replace it using `force` parameter.'
      operationId: api.controllers.agents_controller.insert_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
              schema:
                properties:
                  id:
                    $ref: '#/components/schemas/AgentID'
                  key:
                    type: string
                    maxLength: 64
                    minLength: 64
                    format: wazuh_key
                    description: Key to use when communicating with the manager. The agent must have the same key on its `client.keys` file.
                  name:
                    description: Agent name.
                    type: string
                    format: names
                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option behind_proxy_server to yes at api.yaml and make sure the proxy is setting HTTP header 'X-Forwarded-For' with origin IP address. Allowed values: IP, IP/NET, ANY"
                    type: string
                    format: alphanumeric
                  force_time:
                    description: Remove the old agent with the same IP if disconnected since <force_time> seconds.
                    type: integer
                    format: int32
                    minimum: 0
                required:
                  - name
              example:
                name: NewHost_2
                ip: 10.0.10.11
                id: "123"
                key: 1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64
      responses:
        '200':
          description: 'Inser new agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: 123
                  key: MTIzIE5ld0hvc3RfMiAxMC4wLjEwLjEwIDFhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5emFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6YWJjZGVmZ2hpNjQ=
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/name/{agent_name}:
    get:
      tags:
        - agents
      summary: 'Get an agent by its name'
      description: 'Returns various information from an agent called :agent_name.'
      operationId: api.controllers.agents_controller.get_agent_by_name
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent by name'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - configSum: 29e0926e5a77442212e824868a2a61df
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group1
                      id: '001'
                      ip: 172.18.0.6
                      lastKeepAlive: '2019-10-16T09:13:34Z'
                      manager: wazuh-worker2
                      mergedSum: a13d9b2edc5bdd5ef7331c0d5b9ecf34
                      name: wazuh-agent1
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent1 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                  total_affected_items: 1
                message: All selected agents information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/no_group:
    get:
      tags:
        - agents
      summary: 'Get all agents without group'
      description: 'Returns a list with the available agents without group.'
      operationId: api.controllers.agents_controller.get_agent_no_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get agents without group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - configSum: 29e0926e5a77442212e824868a2a61df
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group1
                      id: '001'
                      ip: 172.18.0.6
                      lastKeepAlive: '2019-10-16T09:13:34Z'
                      manager: wazuh-worker2
                      mergedSum: a13d9b2edc5bdd5ef7331c0d5b9ecf34
                      name: wazuh-agent1
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent1 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: e2f47d482da37c099fa1d6e4c43b523c
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group2
                      id: '002'
                      ip: 172.18.0.7
                      lastKeepAlive: '2019-10-16T09:13:28Z'
                      manager: wazuh-worker2
                      mergedSum: d6fde33dc232d8f91359b2e98994c933
                      name: wazuh-agent2
                      node_name: worker2
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent2 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                    - configSum: dadc074e9a4f036c5d905c280c3b5bcc
                      dateAdd: '1970-01-01T00:00:00Z'
                      group:
                        - default
                        - group3
                      id: '003'
                      ip: 172.18.0.8
                      lastKeepAlive: '2019-10-16T09:13:29Z'
                      manager: wazuh-master
                      mergedSum: e40515ffa928c72ee167ed41d88245c4
                      name: wazuh-agent3
                      node_name: master-node
                      os:
                        arch: x86_64
                        codename: Xenial Xerus
                        major: '16'
                        minor: '04'
                        name: Ubuntu
                        platform: ubuntu
                        uname: Linux |wazuh-agent3 |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb
                          12 13:35:51 UTC 2019 |x86_64
                        version: 16.04.6 LTS
                      registerIP: any
                      status: active
                      version: Wazuh v3.10.0
                  total_affected_items: 3
                message: All selected agents information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/outdated:
    get:
      tags:
        - agents
      summary: 'Get outdated agents'
      description: 'Returns the list of outdated agents.'
      operationId: api.controllers.agents_controller.get_agent_outdated
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get outdated agents'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentsSimple'
              example:
                data:
                  affected_items:
                    - version: Wazuh v3.0.0
                      id: "003"
                      name: main_database
                    - version: Wazuh v3.0.0
                      id: "004"
                      name: dmz002
                  total_affected_items: 2
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/restart:
    put:
      tags:
      - agents
      summary: 'Restarts agents'
      description: 'Restarts all agents or a list of them'
      operationId: api.controllers.agents_controller.restart_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                        $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  message: Restart command sent to all selected agents
                  data:
                    affected_items:
                      - '002'
                      - '004'
                    total_affected_items: 2
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/stats/distinct:
    get:
      tags:
        - agents
      summary: 'Get distinct fields in agents'
      description: 'Returns all the different combinations that agents have for the selected fields. It also indicates the total number of agents that have each combination.'
      operationId: api.controllers.agents_controller.get_agent_fields
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get fields in agents'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentsDistinct'
              example:
                items:
                  - count: 11
                    os:
                      arch: x86_64
                  - count: 2
                totalItems: 13
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/summary/os:
    get:
      tags:
        - agents
      summary: 'Get agents OS summary'
      description: 'Returns a summary of the OS of available agents.'
      operationId: api.controllers.agents_controller.get_agent_summary_os
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Get summary of agents OS'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              description: List of Operating system platforms.
                              type: array
                              items:
                                type: string
              example:
                data:
                  items:
                    - ubuntu
                  totalItems: 1
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/summary/status:
    get:
      tags:
        - agents
      summary: 'Get agents status summary'
      description: 'Returns a summary of the status of available agents.'
      operationId: api.controllers.agents_controller.get_agent_summary_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Get summary of agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentsSummaryStatus'
              example:
                data:
                  total: 7
                  active: 2
                  disconnected: 0
                  never_connected: 5
                  pending: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /ciscat/{agent_id}/results:
    get:
      tags:
      - ciscat
      summary: 'Get CIS-CAT results from an agent'
      description: "Returns the agent's ciscat results info."
      operationId: api.controllers.ciscat_controller.get_agents_ciscat_results
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/benchmark'
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/pass'
        - $ref: '#/components/parameters/fail'
        - $ref: '#/components/parameters/error'
        - $ref: '#/components/parameters/notchecked'
        - $ref: '#/components/parameters/unknown'
        - $ref: '#/components/parameters/score'

      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseCiscatResult'
              example:
                data:
                  affected_items:
                    - benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                      error: 0
                      fail: 82
                      notchecked: 36
                      pass: 102
                      profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                      scan:
                        id: 23487414
                        time: '2019-10-24T14:30:20.768Z'
                      score: 55
                      unknown: 0
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: All CISCAT results loaded
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/local/info:
    get:
      tags:
      - cluster
      summary: Get information about the local node.
      description: Returns basic information about the cluster node receiving the request.
      operationId: api.controllers.cluster_controller.get_cluster_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Node basic information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        node:
                          description: Node name.
                          type: string
                        cluster:
                          description: Cluster name the node belongs to.
                          type: string
                        type:
                          description: Node type.
                          type: string
              example:
                data:
                  node: "node02"
                  cluster: "wazuh"
                  type: "worker"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/nodes:
    get:
      tags:
      - cluster
      summary: Get cluster nodes information
      description: Get information about all nodes in the cluster or a list of them
      operationId: api.controllers.cluster_controller.get_cluster_nodes
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_type'
        - $ref: '#/components/parameters/list_nodes'
      responses:
        '200':
          description: 'List of connected nodes'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseClusterNodes'
              example:
                data:
                  totalItems: 2
                  items:
                    - name: "node02"
                      type: "worker"
                      version: "3.9.0"
                      ip: "172.17.0.101"
                    - name: "node01"
                      type: "master"
                      version: "3.9.0"
                      ip: "172.17.0.100"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/healthcheck:
    get:
      tags:
      - cluster
      summary: Get cluster nodes healthcheck
      description: Returns cluster healthcheck information for all nodes or a list of them. Such information includes last keep alive, last synchronization time and number of agents reporting on each node.
      operationId: api.controllers.cluster_controller.get_healthcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_nodes'
      responses:
        '200':
          description: Health information for cluster nodes
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseNodeHealthcheck'
              example:
                data:
                  n_connected_nodes: 2
                  nodes:
                    node01:
                      info:
                        ip: "172.17.0.100"
                        version: "3.9.0"
                        type: "master"
                        totalActiveAgents: 2
                    node02:
                      info:
                        ip: "172.17.0.101"
                        version: "3.9.0"
                        type: "worker"
                        totalActiveAgents: 5
                      status:
                        last_sync_agentinfo:
                          date_start_master: "2019-01-11T18:52:57.72Z"
                          date_end_master: "2019-01-11T18:52:57.73Z"
                          total_agentinfo: 1
                        sync_integrity_free: true
                        last_sync_agentgroups:
                          date_end_master: "2019-01-11T18:52:51.56Z"
                          total_agentgroups: 0
                          date_start_master: "2019-01-11T18:52:51.56Z"
                        last_sync_integrity:
                          total_files:
                            shared: 2
                            missing: 4
                            extra_valid: 0
                            extra: 0
                          date_end_master: "2019-01-11T18:52:45.47Z"
                          date_start_master: "2019-01-11T18:52:44.36Z"
                        last_keep_alive: "2019-01-11T18:52:16.66Z"
                        sync_agentinfo_free: true
                        sync_extravalid_free: true
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/status:
    get:
      tags:
      - cluster
      summary: Get cluster status
      description: Returns information about the cluster status.
      operationId: api.controllers.cluster_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cluster status'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        enabled:
                          description: Whether the cluster is enabled in the Wazuh configuration.
                          type: string
                          enum:
                          - "yes"
                          - "no"
                        running:
                          description: Whether the cluster daemon is running.
                          type: string
                          enum:
                          - "yes"
                          - "no"
              example:
                data:
                  enabled: "yes"
                  running: "yes"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/local/config:
    get:
      tags:
      - cluster
      summary: Get local node cluster configuration
      description: Returns the current node cluster configuration
      operationId: api.controllers.cluster_controller.get_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Cluster configuration
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        name:
                          description: Cluster name.
                          type: string
                        node_name:
                          description: Node name.
                          type: string
                        node_type:
                          description: Node type.
                          type: string
                          enum:
                          - master
                          - worker
                        key:
                          description: Cluster key used to encrypt messages.
                          type: string
                        port:
                          description: Port used by the **master** node to communicate with workers.
                          type: integer
                        bind_addr:
                          description: Network interface used by the **master** to listen to incoming connections.
                          type: string
                        nodes:
                          description: List of cluster master nodes. This list is used by **worker** nodes to connect to the master.
                          type: array
                          items:
                            type: string
                        hidden:
                          description: Whether to hide the cluster information in the alerts.
                          type: string
                        disabled:
                          description: Whether the cluster is enabled or not.
                          type: boolean
              example:
                data:
                  name: wazuh
                  node_name: node02
                  node_type: worker
                  key: 9d273b53510fef702b54a92e9cffc82e
                  port: 1516
                  bind_addr: 0.0.0.0
                  nodes:
                    - 172.17.0.100
                  hidden: no
                  disabled: false
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/status:
    get:
      tags:
      - cluster
      summary: Get a specified node's status
      description: Returns the status of all Wazuh daemons in node node_id
      operationId: api.controllers.cluster_controller.get_status_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node wazuh daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-monitord: running
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-apid: running
                  wazuh-clusterd: running
                  wazuh-db: running
                  wazuh-modulesd: running
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/info:
    get:
      tags:
      - cluster
      summary: Get a specified node's information
      description: Returns basic information about a specified node such as version, compilation date, installation path.
      operationId: api.controllers.cluster_controller.get_info_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: "2019-03-06T11:24:59Z"
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/configuration:
    get:
      tags:
      - cluster
      summary: Get a specified node's configuration
      description: Returns wazuh configuration used in node {node_id}
      operationId: api.controllers.cluster_controller.get_configuration_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Node configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhConfiguration'
              example:
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats.
      description: Returns Wazuh statistical information in node {node_id} for the current or specified date.
      operationId: api.controllers.cluster_controller.get_stats_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh node stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhStats'
              example:
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/hourly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by hour.
      description: Returns Wazuh statistical information in node {node_id} per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.cluster_controller.get_stats_hourly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/weekly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by week.
      description: Returns Wazuh statistical information in node {node_id} per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.cluster_controller.get_stats_weekly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/analysisd:
    get:
      tags:
      - cluster
      summary: Get a specified node's analysisd stats.
      description: Returns Wazuh analysisd statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_analysisd_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/remoted:
    get:
      tags:
      - cluster
      summary: Get a specified node's remoted stats.
      description: Returns Wazuh remoted statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_remoted_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/logs:
    get:
      tags:
      - cluster
      summary: Get a specified node's wazuh logs.
      description: Returns the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh node logs'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhLogs'
              example:
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/logs/summary:
    get:
      tags:
      - cluster
      summary: Get a summary of a specified node's wazuh logs.
      description: Returns a summary of the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_summary_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/files:
    get:
      tags:
      - cluster
      summary: Get file contents from a specified node in the cluster.
      description: Returns file contents from any file in cluster node {node_id}.
      operationId: api.controllers.cluster_controller.get_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/get_files_path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        contents:
                          description: File contents.
                          type: string
              example:
                data:
                  contents: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - cluster
      summary: Updates file contents in a specified cluster node.
      description: Replaces file contents with the data contained in the API request in a specified cluster node.
      operationId: api.controllers.cluster_controller.put_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/edit_files_path'
        - $ref: '#/components/parameters/overwrite'
      requestBody:
        description: Content of the file to be uploaded
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File updated successfully.
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - cluster
      summary: Removes a file in a specified cluster node.
      description: Removes a specified file in the node {node-id}.
      operationId: api.controllers.cluster_controller.delete_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/edit_files_path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File was deleted.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/restart:
    put:
      tags:
      - cluster
      summary: Restart cluster nodes.
      description: Restarts all nodes in the cluster or a list of them.
      operationId: api.controllers.cluster_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_nodes'
      responses:
        '200':
          description: 'List of affected nodes'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseNodeIDs'
                example:
                  message: Restart command sent to all shown nodes
                  data:
                    affected_items:
                      - 'master-node'
                      - 'worker1'
                    total_affected_items: 2
                    failed_items: []
                    total_failed_items: 0
        default:
          $ref: '#/components/responses/ResponseError'


  /cluster/configuration/validation:
    get:
      tags:
      - cluster
      summary: Check cluster nodes Wazuh configuration.
      description: Returns whether the Wazuh configuration is correct or not in all cluster nodes or a list of them.
      operationId: api.controllers.cluster_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_nodes'
      responses:
        '200':
          description: 'Configuration status'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseValidationStatus'
                example:
                  data:
                    affected_items:
                      - name: master-node
                        status: OK
                      - name: worker1
                        status: OK
                      - name: worker2
                        status: OK
                    failed_items: []
                    total_affected_items: 3
                    total_failed_items: 0
                  message: Validation checked successfully in all nodes
        default:
          $ref: '#/components/responses/ResponseError'


  /cluster/{node_id}/configuration/{component}/{configuration}:
    get:
      tags:
        - cluster
      summary: Get active configuration in node node_id
      description: Returns the requested configuration in JSON format.
      operationId: api.controllers.cluster_controller.get_node_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'

      responses:
        '200':
          description: 'Cluster configuration on-demand'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'

              example:
                data:
                  bind_addr: "0.0.0.0"
                  disabled: "false"
                  hidden: "no"
                  key: "9d273b53510fef702b54a92e9cffc82e"
                  name: "wazuh"
                  node_name: "master-node"
                  node_type: "master"
                  nodes: [
                    "wazuh-master"
                  ]
                  port: 1516

        default:
          $ref: '#/components/responses/ResponseError'

  /lists:
    get:
      tags:
      - lists
      summary: 'Get all CDB lists'
      description: 'Returns the contents of all CDB lists. Optionally, the result can be filtered by several criteria. See available parameters for more details.'
      operationId: api.controllers.lists_controller.get_lists
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/relative_path_filter'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'

      responses:
        '200':
          description: 'Successfully got CDB lists'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseLists'
              example:
                data:
                  affected_items:
                    - folder: etc/lists/amazon
                      name: aws-eventnames
                      path: etc/lists/amazon/aws-eventnames
                    - folder: etc/lists/amazon
                      name: aws-sources
                      path: etc/lists/amazon/aws-sources
                    - folder: etc/lists
                      name: audit-keys
                      path: etc/lists/audit-keys
                    - folder: etc/lists
                      name: security-eventchannel
                      path: etc/lists/security-eventchannel
                  failed_items: []
                  total_affected_items: 4
                  total_failed_items: 0
                message: All specified paths were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /lists/files:
    get:
      tags:
      - lists
      summary: 'Get paths from all CDB lists'
      description: 'Returns the path from all CDB lists. Use this method to know all the CDB lists and their location in the filesystem relative to Wazuh installation folder'
      operationId: api.controllers.lists_controller.get_lists_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'Successfully got all CDB lists and the files where they are defined'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseListsFiles'
              example:
                data:
                  affected_items:
                    - items:
                        - key: AttachLoadBalancers
                          value: Autoscaling
                        - key: DetachLoadBalancers
                          value: Autoscaling
                        - key: PutScalingPolicy
                          value: Autoscaling
                        - key: TerminateInstanceInAutoScalingGroup
                          value: Autoscaling
                      path: etc/lists/amazon/aws-eventnames
                    - items: []
                      path: etc/lists/amazon/aws-sources
                    - items:
                        - key: audit-wazuh-w
                          value: write
                        - key: audit-wazuh-r
                          value: read
                        - key: audit-wazuh-a
                          value: attribute
                        - key: audit-wazuh-x
                          value: execute
                        - key: audit-wazuh-c
                          value: command
                      path: etc/lists/audit-keys
                    - items:
                        - key: '200'
                          value: ''
                        - key: '201'
                          value: ''
                        - key: '203'
                          value: ''
                        - key: '202'
                          value: ''
                      path: etc/lists/security-eventchannel
                  failed_items: []
                  total_affected_items: 4
                  total_failed_items: 0
                message: All specified lists were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/status:
    get:
      tags:
      - manager
      summary: Get the Wazuh manager status
      description: Returns the status of all Wazuh daemons
      operationId: api.controllers.manager_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh manager daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-monitord: running
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-apid: running
                  wazuh-clusterd: running
                  wazuh-db: running
                  wazuh-modulesd: running
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/info:
    get:
      tags:
      - manager
      summary: Get Wazuh manager information
      description: Returns basic information such as version, compilation date, installation path.
      operationId: api.controllers.manager_controller.get_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Manager information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: "2019-03-06T11:24:59Z"
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/configuration:
    get:
      tags:
      - manager
      summary: Get configuration
      description: Returns wazuh configuration used
      operationId: api.controllers.manager_controller.get_configuration
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Wazuh configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhConfiguration'
              example:
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats:
    get:
      tags:
      - manager
      summary: Get stats.
      description: Returns Wazuh statistical information for the current or specified date.
      operationId: api.controllers.manager_controller.get_stats
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhStats'
              example:
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/hourly:
    get:
      tags:
      - manager
      summary: Get stats by hour.
      description: Returns Wazuh statistical information per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.manager_controller.get_stats_hourly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/weekly:
    get:
      tags:
      - manager
      summary: Get stats by week.
      description: Returns Wazuh statistical information per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.manager_controller.get_stats_weekly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/analysisd:
    get:
      tags:
      - manager
      summary: Get a analysisd stats.
      description: Returns Wazuh analysisd statistical information.
      operationId: api.controllers.manager_controller.get_stats_analysisd
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/remoted:
    get:
      tags:
      - manager
      summary: Get remoted stats.
      description: Returns Wazuh remoted statistical information.
      operationId: api.controllers.manager_controller.get_stats_remoted
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/logs:
    get:
      tags:
      - manager
      summary: Get the wazuh manager logs.
      description: Returns the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh logs'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhLogs'
              example:
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/logs/summary:
    get:
      tags:
      - manager
      summary: Get a summary of the wazuh manager logs.
      description: Returns a s0ummary of the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log_summary
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/files:
    get:
      tags:
      - manager
      summary: Get file contents.
      description: Returns file contents from any file.
      operationId: api.controllers.manager_controller.get_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/get_files_path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          contents:
                            description: File contents.
                            type: string
              example:
                data:
                  contents: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - manager
      summary: Update file contents.
      description: Replaces file contents with the data contained in the API request.
      operationId: api.controllers.manager_controller.put_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/edit_files_path'
        - $ref: '#/components/parameters/overwrite'
      requestBody:
        description: Content of the file to be uploaded
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                message: File updated successfully
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - manager
      summary: Removes a file.
      description: Removes a specified file.
      operationId: api.controllers.manager_controller.delete_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/edit_files_path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                message: File was deleted
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/restart:
    put:
      tags:
      - manager
      summary: Restarts the wazuh manager.
      description: Restarts the wazuh manager.
      operationId: api.controllers.manager_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Restarting manager
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/configuration/validation:
    get:
      tags:
      - manager
      summary: Check Wazuh configuration.
      description: Returns wether the Wazuh configuration is correct.
      operationId: api.controllers.manager_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: OK message if configuration is right
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConfigurationValidation'
                example:
                  status: OK
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/configuration/{component}/{configuration}:
    get:
      tags:
        - manager
      summary: Get active configuration in manager for one component [on demand]
      description: Returns the requested configuration in JSON format.
      operationId: api.controllers.manager_controller.get_manager_config_ondemand
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'

      responses:
        '200':
          description: 'Manager configuration on-demand'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'

              example:
                data:
                  bind_addr: "0.0.0.0"
                  disabled: "false"
                  hidden: "no"
                  key: "9d273b53510fef702b54a92e9cffc82e"
                  name: "wazuh"
                  node_name: "master-node"
                  node_type: "master"
                  nodes: [
                    "wazuh-master"
                  ]
                  port: 1516

        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck:
    put:
      tags:
      - rootcheck
      summary: Run a rootcheck scan in all agents.
      description: Runs syscheck and rootcheck in all agents (Wazuh launches both processes simultaneously).
      operationId: api.controllers.rootcheck_controller.put_rootcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck on all agents"
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - rootcheck
      summary: Clear rootcheck scan results in all agents.
      description: Clear rootcheck scan results in all agents.
      operationId: api.controllers.rootcheck_controller.delete_rootcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Rootcheck database deleted"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}:
    get:
      tags:
      - rootcheck
      summary: Get Rootcheck database
      description: Returns rootcheck findings and scan results in the specified agent.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/rootcheck_status'
        - $ref: '#/components/parameters/pci'
        - $ref: '#/components/parameters/cis'
      responses:
        '200':
          description: Latest rootcheck scan result
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/RootcheckDatabase'
              example:
                data:
                  totalItems: 2
                  items:
                    - status: outstanding
                      readDay: "2019-03-08T09:20:05Z"
                      oldDay: "2019-03-08T09:20:05Z"
                      event: "System Audit: SSH Hardening - 3: Root can log in. File: /etc/ssh/sshd_config. Reference: 3 ."
                    - status: outstanding
                      readDay: "2019-03-08T09:20:05Z"
                      oldDay: "2019-03-08T09:20:05Z"
                      pci: 2.2.4
                      event: "System Audit: SSH Hardening - 4: No Public Key authentication {PCI_DSS: 2.2.4}. File: /etc/ssh/sshd_config. Reference: 4 ."
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - rootcheck
      summary: Run rootcheck scan in an agent.
      description: Runs syscheck and rootcheck scans in a specified agent (Wazuh launches both processes at the same time).
      operationId: api.controllers.rootcheck_controller.put_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck locally"
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - rootcheck
      summary: Clear rootcheck scan results for a specified agent.
      description: Clear rootcheck scan results for a specified agent.
      operationId: api.controllers.rootcheck_controller.delete_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Rootcheck database deleted"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/pci:
    get:
      tags:
      - rootcheck
      summary: Get PCI requirements in the rootcheck database.
      description: Returns a list containing PCI requirements that have been detected by rootcheck scans.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_pci_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: PCI requirements list.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 1
                  items:
                  - 2.2.4
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/cis:
    get:
      tags:
      - rootcheck
      summary: Get CIS requirements in the rootcheck database.
      description: Returns a list containing CIS requirements that have been detected by rootcheck scans.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_cis_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: CIS requirements list.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 2
                  items:
                  - "2.3 Debian Linux"
                  - "1.4 Debian Linux"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/last_scan:
    get:
      tags:
      - rootcheck
      summary: Get last rootcheck scan dates.
      description: Returns when the last rootcheck scan started and ended. If the scan is still in progress the end date will be unknown.
      operationId: api.controllers.rootcheck_controller.get_last_scan_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Scan dates'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LastScan'
              example:
                data:
                  end: "2019-03-08T10:35:21Z"
                  start: "2019-03-08T10:34:56Z"
        default:
          $ref: '#/components/responses/ResponseError'

  /rules:
    get:
      tags:
      - rules
      summary: Get information about a list of Wazuh rules.
      description: Returns a list containing information about each rule such as file where it's defined, description, rule group, status, etc.
      operationId: api.controllers.rules_controller.get_rules
      parameters:
        - $ref: '#/components/parameters/rule_ids'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusRLDParam'
        - $ref: '#/components/parameters/group'
        - $ref: '#/components/parameters/level'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/etc_and_ruleset_path'
        - $ref: '#/components/parameters/pci'
        - $ref: '#/components/parameters/gdpr'
        - $ref: '#/components/parameters/gpg13'
        - $ref: '#/components/parameters/hipaa'
        - $ref: '#/components/parameters/nist-800-53'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRules'
              example:
                data:
                  affected_items:
                    - description: Generic template for all syslog rules.
                      details:
                        category: syslog
                        noalert: '1'
                      file: 0010-rules_config.xml
                      gdpr: []
                      gpg13: []
                      groups:
                        - syslog
                      hipaa: []
                      id: 1
                      level: 0
                      nist_800_53: []
                      path: ruleset/rules
                      pci: []
                      status: enabled
                    - description: Generic template for all web proxy rules.
                      details:
                        category: squid
                        noalert: '1'
                      file: 0010-rules_config.xml
                      gdpr: []
                      gpg13: []
                      groups:
                        - squid
                      hipaa: []
                      id: 5
                      level: 0
                      nist_800_53: []
                      path: ruleset/rules
                      pci: []
                      status: enabled
                  failed_items: []
                  total_affected_items: 54
                  total_failed_items: 0
                message: All selected rules were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/groups:
    get:
      tags:
      - rules
      summary: Get all rule groups names.
      description: Returns a list containing all rule groups names.
      operationId: api.controllers.rules_controller.get_rules_groups
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'Rule groups names'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponse'
              example:
                data:
                  affected_items:
                    - active_response
                    - agentless
                    - attacks
                    - firewall
                    - gdpr_II_5.1.f
                    - gdpr_IV_30.1.g
                  failed_items: []
                  total_affected_items: 6
                  total_failed_items: 0
                message: All groups in rules are shown
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/requirement/{requirement}:
    get:
      tags:
      - rules
      summary: Get all specified requirements.
      description: Returns all specified requirement names defined in the Wazuh ruleset.
      operationId: api.controllers.rules_controller.get_rules_requirement
      parameters:
        - $ref: '#/components/parameters/rule_requirement'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'Requirements names'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponse'
              example:
                data:
                  affected_items:
                    - 10.2.6
                    - 10.2.7
                    - 10.5.2
                    - 10.5.5
                    - 10.6.1
                    - 11.4
                    - 11.5
                  failed_items: []
                  total_affected_items: 7
                  total_failed_items: 0
                message: Selected rules were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/files:
    get:
      tags:
      - rules
      summary: Get all files which defines rules.
      description: Returns a list containing all files used to define rules and their status.
      operationId: api.controllers.rules_controller.get_rules_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/etc_and_ruleset_path'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/statusRLDParam'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRulesFiles'
              example:
                data:
                  affected_items:
                    - file: 0010-rules_config.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0015-ossec_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0016-wazuh_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0020-syslog_rules.xml
                      path: ruleset/rules
                      status: enabled
                  failed_items: []
                  total_affected_items: 4
                  total_failed_items: 0
                message: All rules files were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/files/{file}/download:
    get:
      tags:
        - rules
      summary: Download an specified rule file.
      description: Download an specified rule file.
      operationId: api.controllers.rules_controller.get_download_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/downloadFile'
      responses:
        '200':
          description: Rule contents.
          content:
            application/xml:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ResponseError'

  /sca/{agent_id}:
    get:
      tags:
      - sca
      summary: 'Get security configuration assessment (SCA) database'
      description: 'Returns the security SCA database of an agent.'
      operationId: api.controllers.sca_controller.get_sca_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/sca_name'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'SCA database elements'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseSCADatabase'
              example:
                data:
                  affected_items:
                    - description: This document provides prescriptive guidance for establishing a secure
                        configuration posture for Debian Linux 9.
                      end_scan: '2019-11-13T10:57:09Z'
                      fail: 26
                      hash_file: c5ada687e0c2ae9504be13b965074cc262e62be4e68fe550d464018def4af61c
                      invalid: 1
                      name: CIS benchmark for Debian/Linux 9 L2
                      pass: 2
                      policy_id: cis_debian9_L2
                      references: https://www.cisecurity.org/cis-benchmarks/
                      score: 7
                      start_scan: '2019-11-13T10:57:09Z'
                      total_checks: 29
                    - description: This document provides prescriptive guidance for establishing a secure
                        configuration posture for Debian Linux 9.
                      end_scan: '2019-11-13T10:57:06Z'
                      fail: 48
                      hash_file: b44ecda10d854ecad25476ed99b5dfd9481e8a846c8d8a7684a1cc3b29f12993
                      invalid: 16
                      name: CIS benchmark for Debian/Linux 9 L1
                      pass: 35
                      policy_id: cis_debian9_L1
                      references: https://www.cisecurity.org/cis-benchmarks/
                      score: 42
                      start_scan: '2019-11-13T10:57:06Z'
                      total_checks: 99
                  failed_items: []
                  total_affected_items: 2
                  total_failed_items: 0
                message: All selected sca information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /sca/{agent_id}/checks/{policy_id}:
    get:
      tags:
      - sca
      summary: 'Get policy monitoring alerts for a given policy'
      description: 'Returns the policy monitoring alerts for a given policy'
      operationId: api.controllers.sca_controller.get_sca_checks
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/policy_id'
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/rationale'
        - $ref: '#/components/parameters/remediation'
        - $ref: '#/components/parameters/full_path_filter'
        - $ref: '#/components/parameters/process'
        - $ref: '#/components/parameters/directory'
        - $ref: '#/components/parameters/registry'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/result'
        - $ref: '#/components/parameters/condition'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of SCA Checks for a given policy ID'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSCAChecks'
              example:
                data:
                  affected_items:
                  - remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
                    rationale: "Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition."
                    title: "Ensure separate partition exists for /var"
                    policy_id: cis_debian
                    file: /etc/fstab
                    description: "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable."
                    id: 5003
                    result: failed
                    condition: all
                    references: "https://tldp.org/HOWTO/LVM-HOWTO/"
                    compliance:
                    - key: cis
                      value: "1.1.6"
                    - key: cis_csc
                      value: "5"
                  - remediation: "Run the following commands to remove exim: # apt-get remove exim4; # apt-get purge exim4"
                    rationale: "Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface."
                    title: "Ensure IMAP and POP3 server is not enabled (POP3)"
                    policy_id: cis_debian
                    file: /etc/inetd.conf
                    description: exim is an open source IMAP and POP3 server for Linux based systems.
                    id: 5022
                    result: passed
                    condition: all
                    compliance:
                    - key: cis
                      value: "2.2.11"
                    - key: cis_csc
                      value: "9"
                    - key: pci_dss
                      value: "2.2.2"
                  failed_items: []
                  total_affected_items: 2
                  total_failed_items: 0
                message: All selected sca/policy information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck:
    put:
      tags:
      - syscheck
      summary: Run a syscheck scan in all agents.
      description: Runs syscheck and rootcheck in all agents (Wazuh launches both processes simultaneously).
      operationId: api.controllers.syscheck_controller.put_syscheck
      parameters:
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '000'
                    - '001'
                    - '002'
                    - '003'
                  failed_items: []
                  total_affected_items: 4
                  total_failed_items: 0
                message: Restarting Syscheck/Rootcheck on all available agents
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck/{agent_id}:
    get:
      tags:
      - syscheck
      summary: Get File integrity monitoring scan results
      description: Returns FIM findings in the specified agent.
      operationId: api.controllers.syscheck_controller.get_syscheck_agent
      parameters:
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/full_path_filter'
        - $ref: '#/components/parameters/filetype'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/md5'
        - $ref: '#/components/parameters/sha1'
        - $ref: '#/components/parameters/sha256'
        - $ref: '#/components/parameters/hashfilter'
      responses:
        '200':
          description: Latest syscheck scan result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscheckResult'
              example:
                data:
                  affected_items:
                    - attributes: 0
                      changes: 1
                      date: '2019-11-22T10:24:52Z'
                      file: "/etc/dpkg/origins/debian"
                      gid: '0'
                      gname: root
                      inode: 1459742
                      md5: 731423fa8ba067262f8ef37882d1e742
                      mtime: '2009-02-02T23:06:58Z'
                      perm: '100644'
                      sha1: b65f7f2af66c53b51765877bbe91a22bc6fca1e2
                      sha256: 50f35af8ac4a5df3690991a4b428fa49d56580b0020fcc6e38283b3b1b2e6c74
                      size: 82
                      type: file
                      uid: '0'
                      uname: root
                    - attributes: 0
                      changes: 1
                      date: '2019-11-22T10:24:56Z'
                      file: "/etc/sgml/xml-core.cat"
                      gid: '0'
                      gname: root
                      inode: 2896763
                      md5: 055ba0bd3154c0a58b9bf8a0c9ecf2fa
                      mtime: '2012-11-07T21:44:21Z'
                      perm: '100644'
                      sha1: 3dec5570307472381671ff18bbe4d4be09951690
                      sha256: 3c46704b553c4b55ce928ffe89badfcfd08a02f0e6558211dfd57d9ae1e72aa4
                      size: 45
                      type: file
                      uid: '0'
                      uname: root
                  failed_items: []
                  total_affected_items: 1433
                  total_failed_items: 0
                message: FIM findings of the agent
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
        - syscheck
      summary: Clear FIM scan results for a specified agent.
      description: Clear file integrity monitoring scan results for a specified agent.
      operationId: api.controllers.syscheck_controller.delete_syscheck_agent
      parameters:
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponse'
              example:
                data:
                  affected_items:
                    - '000'
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: Clear Syscheck/Rootcheck database on the agent
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck/{agent_id}/last_scan:
    get:
      tags:
      - syscheck
      summary: Get last syscheck scan dates.
      description: Returns when the last syscheck scan started and ended. If the scan is still in progress the end date will be unknown.
      operationId: api.controllers.syscheck_controller.get_last_scan_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Scan dates'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscheckLastScan'
              example:
                data:
                  affected_items:
                    - end: '2019-11-22T10:47:56Z'
                      start: '2019-11-22T10:47:32Z'
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: Last scan of the agent
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders:
    get:
      tags:
        - decoders
      summary: 'Get all decoders'
      description: "Returns information about all decoders included in ossec.conf. This information include decoder's route, decoder's name, decoder's file among others"
      operationId: api.controllers.decoders_controller.get_decoders
      parameters:
        - $ref: '#/components/parameters/decoder_name'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/etc_and_ruleset_path'
        - $ref: '#/components/parameters/statusRLDParam'

      responses:
        '200':
          description: 'List of decoders included in ossec.conf'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseDecoders'
              example:
                data:
                  totalItems: 571
                  items:
                  - file: 0005-wazuh_decoders.xml
                    name: wazuh
                    position: 0
                    status: enabled
                    details:
                      prematch: "^wazuh: "
                  - file: 0005-wazuh_decoders.xml
                    name: agent-buffer
                    position: 1
                    status: enabled
                    details:
                      parent: wazuh
                      prematch: "^Agent buffer:"
                      regex:
                        - "^ '(\\S+)'."
                      order: level
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/files:
    get:
      tags:
        - decoders
      summary: 'Get all decoders files'
      description: "Returns information about all decoders files used in Wazuh. This information include decoder's file, decoder's route and decoder's status among others"
      operationId: api.controllers.decoders_controller.get_decoders_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/etc_and_ruleset_path'
        - $ref: '#/components/parameters/statusRLDParam'
      responses:
        '200':
          description: 'List of decoders files'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseDecodersFiles'
              example:
                data:
                  totalItems: 571
                  items:
                  - file: 0185-openldap_decoders.xml
                    status: enabled
                    path: /var/ossec/ruleset/decoders
                  - file: 0220-postfix_decoders.xml
                    status: enabled
                    path: /var/ossec/ruleset/decoders
                  - file: 0400-identity_guard_decoders.xml
                    status: enabled
                    path: /var/ossec/ruleset/decoders
                  - file: 0190-openvpn_decoders.xml
                    status: enabled
                    path: /var/ossec/ruleset/decoders
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/files/{file}/download:
    get:
      tags:
      - decoders
      summary: Download an specified decoder file.
      description: Download an specified decoder file.
      operationId: api.controllers.decoders_controller.get_download_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/downloadFile'
      responses:
        '200':
          description: Decoder contents.
          content:
            application/xml:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/parents:
    get:
      tags:
        - decoders
      summary: 'Get all parent decoders'
      description: 'Returns information about all parent decoders. A parent decoder is a decoder used as base of other decoders'
      operationId: api.controllers.decoders_controller.get_decoders_parents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'List of parent decoders'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponse'
              example:
                data:
                  totalItems: 153
                  items:
                  - file: local_decoder.xml
                    name: local_decoder_example
                    position: 0
                    status: enabled
                    details:
                      program_name: local_decoder_example
                  - file: 0465-azure_decoders.xml
                    name: azure-storage
                    position: 1
                    status: enabled
                    details:
                      prematch: "^azure_tag: azure-storage. "
                      regex:
                        - "^azure_storage_tag: (\\S+)"
                      order: tag
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscheck:
    delete:
      tags:
        - experimental
      summary: 'Clear agents syscheck database'
      description: 'Clears the syscheck database for all agents or a list of them'
      operationId: api.controllers.experimental_controller.clear_syscheck_database
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
      responses:
        '200':
          description: 'Delete syscheck database'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '000'
                    - '001'
                    - '002'
                    - '003'
                    - '004'
                    - '005'
                    - '006'
                    - '007'
                    - '008'
                    - '009'
                    - '010'
                    - '011'
                    - '012'
                  failed_items: []
                  total_affected_items: 13
                  total_failed_items: 0
                message: Cleared syscheck database on shown agents
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/ciscat/results:
    get:
      tags:
        - experimental
      summary: 'Get CIS-CAT results'
      description: "Return CIS-CAT results for all agents or a list of them"
      operationId: api.controllers.experimental_controller.get_cis_cat_results
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/benchmark'
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/pass'
        - $ref: '#/components/parameters/fail'
        - $ref: '#/components/parameters/error'
        - $ref: '#/components/parameters/notchecked'
        - $ref: '#/components/parameters/unknown'
        - $ref: '#/components/parameters/score'
      responses:
        '200':
          description: 'Return a list of CIS-CAT results'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseCiscatResult'
              example:
                data:
                  affected_items:
                    - agent_id: '001'
                      benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                      error: 0
                      fail: 82
                      notchecked: 36
                      pass: 102
                      profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                      scan:
                        id: 1422619291
                        time: '2019-12-03T08:38:35.230Z'
                      score: 55
                      unknown: 0
                    - agent_id: '002'
                      benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                      error: 0
                      fail: 82
                      notchecked: 36
                      pass: 102
                      profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                      scan:
                        id: 1794774880
                        time: '2019-12-03T08:38:27.743Z'
                      score: 55
                      unknown: 0
                    - agent_id: '003'
                      benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                      error: 0
                      fail: 82
                      notchecked: 36
                      pass: 102
                      profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                      scan:
                        id: 622382213
                        time: '2019-12-03T08:39:02.569Z'
                      score: 55
                      unknown: 0
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All CISCAT results loaded
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/hardware:
    get:
      tags:
        - experimental
      summary: 'Get hardware info from agents'
      description: "Returns all agents (or a list of them) hardware info. This information include cpu, ram, scan info among others of all agents."
      operationId: api.controllers.experimental_controller.get_hardware_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/ram.free'
        - $ref: '#/components/parameters/ram.total'
        - $ref: '#/components/parameters/cpu.cores'
        - $ref: '#/components/parameters/cpu.mhz'
        - $ref: '#/components/parameters/cpu.name'
        - $ref: '#/components/parameters/board_serial'
      responses:
        '200':
          description: "Return a list of agent's hardware results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorHardware'
              example:
                data:
                  affected_items:
                    - agent_id: '000'
                      board_serial: BSS-0123456789
                      cpu:
                        cores: 12
                        mhz: 3094.875
                        name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                      ram:
                        free: 6958480
                        total: 16263580
                        usage: 58
                      scan:
                        id: 1452382474
                        time: '2019-12-03T08:37:42Z'
                    - agent_id: '001'
                      board_serial: BSS-0123456789
                      cpu:
                        cores: 12
                        mhz: 2688.144
                        name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                      ram:
                        free: 5793604
                        total: 16263580
                        usage: 65
                      scan:
                        id: 1317471702
                        time: '2019-12-03T08:38:29Z'
                    - agent_id: '002'
                      board_serial: BSS-0123456789
                      cpu:
                        cores: 12
                        mhz: 2896.127
                        name: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
                      ram:
                        free: 5844192
                        total: 16263580
                        usage: 65
                      scan:
                        id: 2069790203
                        time: '2019-12-03T08:38:21Z'
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netaddr:
    get:
      tags:
        - experimental
      summary: 'Get the IPv4 and IPv6 addresses associated to network interfaces'
      description: "Returns all agents (or a list of them) IPv4 and IPv6 addresses associated to their network interfaces. This information include used IP protocol, interface, and IP address among others."
      operationId: api.controllers.experimental_controller.get_network_address_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/proto'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/broadcast'
        - $ref: '#/components/parameters/netmask'
      responses:
        '200':
          description: "Return a list of agent's network results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorNetwork'
              example:
                data:
                  affected_items:
                    - address: 172.23.0.3
                      agent_id: '000'
                      broadcast: 172.23.255.255
                      iface: eth0
                      netmask: 255.255.0.0
                      proto: ipv4
                      scan:
                        id: 1921972007
                    - address: 172.23.0.6
                      agent_id: '001'
                      broadcast: 172.23.255.255
                      iface: eth0
                      netmask: 255.255.0.0
                      proto: ipv4
                      scan:
                        id: 1704225423
                    - address: 172.23.0.7
                      agent_id: '002'
                      broadcast: 172.23.255.255
                      iface: eth0
                      netmask: 255.255.0.0
                      proto: ipv4
                      scan:
                        id: 1393900138
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netiface:
    get:
      tags:
        - experimental
      summary: 'Get all network interfaces from agents.'
      description: "Returns all agents (or a list of them) network interfaces. This information includes rx, scan, tx info and some network information among other."
      operationId: api.controllers.experimental_controller.get_network_interface_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/adapter'
        - $ref: '#/components/parameters/type_syscollector'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/tx.packets'
        - $ref: '#/components/parameters/rx.packets'
        - $ref: '#/components/parameters/tx.bytes'
        - $ref: '#/components/parameters/rx.bytes'
        - $ref: '#/components/parameters/tx.errors'
        - $ref: '#/components/parameters/rx.errors'
        - $ref: '#/components/parameters/tx.dropped'
        - $ref: '#/components/parameters/rx.dropped'
      responses:
        '200':
          description: "Return a list of agent's network interfaces results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorInterface'
              example:
                data:
                  affected_items:
                    - agent_id: '000'
                      mac: 02:42:ac:17:00:03
                      mtu: 1500
                      name: eth0
                      rx:
                        bytes: 7161
                        dropped: 0
                        errors: 0
                        packets: 58
                      scan:
                        id: 1921972007
                        time: '2019-12-03T09:57:04Z'
                      state: up
                      tx:
                        bytes: 115
                        dropped: 0
                        errors: 0
                        packets: 2
                      type: ethernet
                    - agent_id: '001'
                      mac: 02:42:ac:17:00:06
                      mtu: 1500
                      name: eth0
                      rx:
                        bytes: 868555
                        dropped: 0
                        errors: 0
                        packets: 1037
                      scan:
                        id: 1704225423
                        time: '2019-12-03T09:57:42Z'
                      state: up
                      tx:
                        bytes: 231924
                        dropped: 0
                        errors: 0
                        packets: 910
                      type: ethernet
                    - agent_id: '002'
                      mac: 02:42:ac:17:00:07
                      mtu: 1500
                      name: eth0
                      rx:
                        bytes: 876071
                        dropped: 0
                        errors: 0
                        packets: 1152
                      scan:
                        id: 1393900138
                        time: '2019-12-03T09:57:43Z'
                      state: up
                      tx:
                        bytes: 232396
                        dropped: 0
                        errors: 0
                        packets: 906
                      type: ethernet
                  failed_items: []
                  total_affected_items: 3
                  total_failed_items: 0
                message: All specified syscollector information is shown
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netproto:
    get:
      tags:
        - experimental
      summary: 'Get network protocol info from agents'
      description: "Returns all agents (or a list of them) routing configuration for each network interface. This information includes interface, type protocol information among other."
      operationId: api.controllers.experimental_controller.get_network_protocol_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface'
        - $ref: '#/components/parameters/type_syscollector'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/dhcp'
      responses:
        '200':
          description: "Return a list of agent's network protocol results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorProtocol'
              example:
                data:
                  totalItems: 16
                  items:
                  - iface: "enp0s3"
                    scan_id: 1203337658
                    type: "ipv6"
                    dhcp: "enabled"
                    agent_id: "000"
                  - iface: "enp0s8"
                    scan_id: 1203337658
                    type: "ipv6"
                    dhcp: "enabled"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/os:
    get:
      tags:
        - experimental
      summary: 'Get OS info from agents'
      description: "Returns all agents (or a list of them) OS info. This information includes os information, architecture information among other."
      operationId: api.controllers.experimental_controller.get_os_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/os.name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/os.version'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/release'
      responses:
        '200':
          description: "Return a list of agent's OS results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorOS'
              example:
                data:
                  totalItems: 4
                  items:
                  - os:
                      codename: "Bionic Beaver"
                      major: "18"
                      minor: "04"
                      name: "Ubuntu"
                      platform: "ubuntu"
                      version: "18.04.1 LTS (Bionic Beaver)"
                    scan:
                      id: 651932304
                      time: "2019-02-19T10:22:14Z"
                    release: "4.15.0-43-generic"
                    architecture: "x86_64"
                    version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                    sysname: "Linux"
                    hostname: "master"
                    agent_id: "000"
                  - os:
                      codename: "Bionic Beaver"
                      major: "18"
                      minor: "04"
                      name: "Ubuntu"
                      platform: "ubuntu"
                      version: "18.04.1 LTS (Bionic Beaver)"
                    scan:
                      id: 780978297
                      time: "2019-02-19T10:26:20Z"
                    release: "4.15.0-43-generic"
                    architecture: "x86_64"
                    version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                    sysname: "Linux"
                    hostname: "agent-1"
                    agent_id: "001"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/packages:
    get:
      tags:
        - experimental
      summary: 'Get packages info from agents'
      description: "Returns all agents (or a list of them) packages info. This information includes name, section, size, and priority information of all packages among other."
      operationId: api.controllers.experimental_controller.get_packages_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/vendor'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/file_format'
        - $ref: '#/components/parameters/package_version'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorPackages'
              example:
                data:
                  totalItems: 2014
                  items:
                  - scan:
                      id: 1631140954
                      time: "2019-02-19T10:22:14Z"
                    name: "acl"
                    section: "utils"
                    priority: "optional"
                    size: 200
                    description: "Access control list utilities"
                    architecture: "amd64"
                    multiarch: "foreign"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    version: "2.2.52-3build1"
                    format: "deb"
                    agent_id: "000"
                  - scan:
                      id: 1631140954
                      time: "2019-02-19T10:22:14Z"
                    name: "accountsservice"
                    section: "admin"
                    priority: "optional"
                    size: 440
                    description: "query and manipulate user account information"
                    architecture: "amd64"
                    multiarch: "foreign"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    version: "0.6.45-1ubuntu1"
                    format: "deb"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/ports:
    get:
      tags:
        - experimental
      summary: 'Get ports info from agents'
      description: "Returns all agents (or a list of them) ports info. This information includes local IP, Remote IP, protocol information among other"
      operationId: api.controllers.experimental_controller.get_ports_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/pid'
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/local.ip'
        - $ref: '#/components/parameters/local.port'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/tx_queue'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/process'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorPorts'
              example:
                data:
                  totalItems: 18
                  items:
                  - local:
                      ip: 172.17.0.100
                      port: 1516
                    remote:
                      ip: 172.17.0.101
                      port: 54550
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: established
                    protocol: tcp
                    rx_queue: 0
                    tx_queue: 0
                    inode: 321208
                  - local:
                      ip: "::"
                      port: 55000
                    remote:
                      ip: "::"
                      port: 0
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: listening
                    protocol: tcp6
                    rx_queue: 0
                    inode: 18153
                    tx_queue: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/processes:
    get:
      tags:
        - experimental
      summary: 'Get processes info from agents'
      description: "Returns all agents (or a list of them) processes info."
      operationId: api.controllers.experimental_controller.get_processes_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/process_pid'
        - $ref: '#/components/parameters/process_state'
        - $ref: '#/components/parameters/ppid'
        - $ref: '#/components/parameters/egroup'
        - $ref: '#/components/parameters/euser'
        - $ref: '#/components/parameters/fgroup'
        - $ref: '#/components/parameters/process_name'
        - $ref: '#/components/parameters/nlwp'
        - $ref: '#/components/parameters/pgrp'
        - $ref: '#/components/parameters/priority'
        - $ref: '#/components/parameters/rgroup'
        - $ref: '#/components/parameters/ruser'
        - $ref: '#/components/parameters/sgroup'
        - $ref: '#/components/parameters/suser'
      responses:
        '200':
          description: "Return a list of agent's processes results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorProcesses'
              example:
                data:
                  totalItems: 420
                  items:
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 20
                    suser: "root"
                    ppid: 0
                    vm_size: 0
                    session: 0
                    pid: "2"
                    nlwp: 1
                    name: "kthreadd"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: 0
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 2
                    start_time: 8
                    tty: 0
                    agent_id: "000"
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 25
                    suser: "root"
                    ppid: 2
                    vm_size: 0
                    session: 0
                    pid: "28"
                    nlwp: 1
                    name: "ksmd"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: 5
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 28
                    start_time: 22
                    tty: 0
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/hotfixes:
    get:
      tags:
        - experimental
      summary: 'Get hotfixes info from agents'
      description: "Returns all agents (or a list of them) hotfixes info."
      operationId: api.controllers.experimental_controller.get_hotfixes_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/hotfix'
      responses:
        '200':
          description: "Return a list of agent's hotfix results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorHotfixes'
              example:
                data:
                  affected_items:
                    - hotfix: 'KB2978691'
                      scan:
                        id: 1708048540
                        time: '2019-10-30T16:09:35Z'
                    - hotfix: 'KC2978693'
                      scan:
                        id: 1708048541
                        time: '2019-10-30T16:19:39Z'
                  failed_items: []
                  total_affected_items: 2
                  total_failed_items: 0
                message: All specified items were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/hardware:
    get:
      tags:
        - syscollector
      summary: 'Get hardware info'
      description: "Returns the agent's hardware info. This information include cpu, ram, scan info among others."
      operationId: api.controllers.syscollector_controller.get_hardware_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: "Return a list of agent's hardware results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorHardware'
              example:
                data:
                  affected_items:
                    - inode: 15952431
                      local:
                        ip: 127.0.0.11
                        port: 45363
                      protocol: tcp
                      remote:
                        ip: 0.0.0.0
                        port: 0
                      rx_queue: 0
                      scan:
                        id: 1708048540
                        time: '2019-10-30T16:09:35Z'
                      state: listening
                      tx_queue: 0
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: All specified items were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/hotfixes:
    get:
      tags:
        - syscollector
      summary: "Get hotfixes"
      description: "Returns all hotfixes installed by Microsoft(R) in Windows(R) systems (KB... fixes)"
      operationId: api.controllers.syscollector_controller.get_hotfix_info
      parameters:
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/hotfix'
      responses:
        '200':
          description: "Return an agent's hotfix results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorHotfixes'
              example:
                data:
                  affected_items:
                    - hotfix: 'KB2978691'
                      scan:
                        id: 1708048540
                        time: '2019-10-30T16:09:35Z'
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: All specified items were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netaddr:
    get:
      tags:
        - syscollector
      summary: 'Get network address info of an agent'
      description: "Returns the agent's network address info. This information include used IP protocol, interface, IP address  among others."
      operationId: api.controllers.syscollector_controller.get_network_address_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface'
        - $ref: '#/components/parameters/proto'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/broadcast'
        - $ref: '#/components/parameters/netmask'
      responses:
        '200':
          description: "Return a list of agent's network results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorNetwork'
              example:
                data:
                  affected_items:
                    - address: 172.26.0.7
                      broadcast: 172.26.255.255
                      iface: eth0
                      netmask: 255.255.0.0
                      proto: ipv4
                      scan:
                        id: 476539860
                  failed_items: []
                  total_affected_items: 1
                  total_failed_items: 0
                message: All specified items were shown
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netiface:
    get:
      tags:
        - syscollector
      summary: 'Get network interface info of an agent'
      description: "Returns the agent's network interface info. This information include rx, scan, tx info and some network information among others."
      operationId: api.controllers.syscollector_controller.get_network_interface_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/adapter'
        - $ref: '#/components/parameters/typesys'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/tx.packets'
        - $ref: '#/components/parameters/rx.packets'
        - $ref: '#/components/parameters/tx.bytes'
        - $ref: '#/components/parameters/rx.bytes'
        - $ref: '#/components/parameters/tx.errors'
        - $ref: '#/components/parameters/rx.errors'
        - $ref: '#/components/parameters/tx.dropped'
        - $ref: '#/components/parameters/rx.dropped'
      responses:
        '200':
          description: "Return a list of agent's network interfaces results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorInterface'
              example:
                data:
                  totalItems: 2
                  items:
                  - rx:
                      bytes: 151695946
                      dropped: 0
                      errors: 0
                      packets: 111792
                    scan:
                      id: 1478544824
                      time: "2019-03-08T08:30:53Z"
                    tx:
                      bytes: 2408059
                      dropped: 0
                      errors: 0
                      packets: 35104
                    name: "enp0s3"
                    state: "up"
                    type: "ethernet"
                    mtu: 1500
                    mac: "02:f9:71:d7:9d:11"
                  - rx:
                      bytes: 0
                      dropped: 0
                      errors: 0
                      packets: 0
                    scan:
                      id: 1478544824
                      time: "2019-03-08T08:30:53Z"
                    tx:
                      bytes: 5312
                      dropped: 0
                      errors: 0
                      packets: 24
                    name: "enp0s8"
                    state: "up"
                    type: "ethernet"
                    mtu: 1500
                    mac: "08:00:27:78:05:d4"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netproto:
    get:
      tags:
        - syscollector
      summary: 'Get network protocol info of an agent'
      description: "Returns the agent's routing configuration for each network interface."
      operationId: api.controllers.syscollector_controller.get_network_protocol_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface'
        - $ref: '#/components/parameters/type_syscollector'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/dhcp'
      responses:
        '200':
          description: "Return a list of agent's network protocol results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorProtocol'
              example:
                data:
                  totalItems: 4
                  items:
                  - type: "ipv6"
                    iface: "enp0s3"
                    dhcp: "enabled"
                    scan_id: 1478544824
                  - type: "ipv6"
                    iface: "enp0s8"
                    dhcp: "enabled"
                    scan_id: 1478544824
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/os:
    get:
      tags:
        - syscollector
      summary: 'Get OS info of an agent'
      description: "Returns the agent's OS info. This information include os information, architecture information among others of all agents."
      operationId: api.controllers.syscollector_controller.get_os_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: "Return a list of agent's OS results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorOS'
              example:
                data:
                  os:
                    codename: "Bionic Beaver"
                    major: "18"
                    minor: "04"
                    name: "Ubuntu"
                    platform: "ubuntu"
                    version: "18.04.1 LTS (Bionic Beaver)"
                  scan:
                    id: 242764188
                    time: "2019-03-08T08:30:53Z"
                  architecture: "x86_64"
                  release: "4.15.0-43-generic"
                  version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                  sysname: "Linux"
                  hostname: "master"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/packages:
    get:
      tags:
        - syscollector
      summary: 'Get packages info of an agent'
      description: "Returns the agent's packages info. This information include name, section, size, priority information of all packages among others."
      operationId: api.controllers.syscollector_controller.get_packages_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/vendor'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/file_format'
        - $ref: '#/components/parameters/package_version'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorPackages'
              example:
                data:
                  totalItems: 535
                  items:
                  - scan:
                      id: 520922172
                      time: "2019-03-08T08:30:53Z"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    name: "base-files"
                    priority: "required"
                    description: "Debian base system miscellaneous files"
                    architecture: "amd64"
                    format: "deb"
                    size: 386
                    version: "10.1ubuntu2.3"
                    section: "admin"
                    multiarch: "foreign"
                  - scan:
                      id: 520922172
                      time: "2019-03-08T08:30:53Z"
                    vendor: "Colin Watson <cjwatson@debian.org>"
                    name: "base-passwd"
                    priority: "required"
                    description: "Debian base system master password and group files"
                    architecture: "amd64"
                    format: "deb"
                    size: 228
                    version: "3.5.44"
                    section: "admin"
                    multiarch: "foreign"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/ports:
    get:
      tags:
        - syscollector
      summary: 'Get ports info of an agent'
      description: "Returns the agent's ports info. This information include local IP, Remote IP, protocol information among others."
      operationId: api.controllers.syscollector_controller.get_ports_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/pid'
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/local.ip'
        - $ref: '#/components/parameters/local.port'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/tx_queue'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/process'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorPorts'
              example:
                data:
                  totalItems: 18
                  items:
                  - local:
                      ip: 172.17.0.100
                      port: 1516
                    remote:
                      ip: 172.17.0.101
                      port: 54550
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: established
                    protocol: tcp
                    rx_queue: 0
                    tx_queue: 0
                    inode: 321208
                  - local:
                      ip: "::"
                      port: 55000
                    remote:
                      ip: "::"
                      port: 0
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: listening
                    protocol: tcp6
                    rx_queue: 0
                    inode: 18153
                    tx_queue: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/processes:
    get:
      tags:
        - syscollector
      summary: 'Get processes info an agent'
      description: "Returns the agent's processes info."
      operationId: api.controllers.syscollector_controller.get_processes_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/process_pid'
        - $ref: '#/components/parameters/process_state'
        - $ref: '#/components/parameters/ppid'
        - $ref: '#/components/parameters/egroup'
        - $ref: '#/components/parameters/euser'
        - $ref: '#/components/parameters/fgroup'
        - $ref: '#/components/parameters/process_name'
        - $ref: '#/components/parameters/nlwp'
        - $ref: '#/components/parameters/pgrp'
        - $ref: '#/components/parameters/priority'
        - $ref: '#/components/parameters/rgroup'
        - $ref: '#/components/parameters/ruser'
        - $ref: '#/components/parameters/sgroup'
        - $ref: '#/components/parameters/suser'
      responses:
        '200':
          description: "Return a list of agent's processes results"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseSyscollectorProcesses'
              example:
                data:
                  totalItems: 120
                  items:
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 20
                    suser: "root"
                    ppid: 2196
                    vm_size: 13312
                    session: 2195
                    pid: "2204"
                    nlwp: 1
                    name: "bash"
                    euser: "root"
                    sgroup: "root"
                    size: 3328
                    stime: 0
                    nice: 0
                    argvs: "/tmp/vagrant-shell,172.17.0.100,master,node01"
                    share: 595
                    processor: 1
                    ruser: "root"
                    cmd: "bash"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 2195
                    resident: 659
                    utime: 0
                    tgid: 2204
                    start_time: 8
                    tty: 0
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "I"
                    priority: 0
                    suser: "root"
                    ppid: 2
                    vm_size: 0
                    session: 0
                    pid: "121"
                    nlwp: 1
                    name: "charger_manager"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: -20
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 121
                    start_time: 1009
                    tty: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /security/user/authenticate:
    get:
      tags:
      - security
      summary: 'User/password authentication to get an access token'
      description: 'This method should be called to get an API token. This token will expire at some time.'
      operationId: api.controllers.security_controller.login_user
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        default:
          $ref: '#/components/responses/ResponseError'

  /security/user/revoke:
    put:
      tags:
      - security
      summary: 'Revoke all active JWT tokens'
      description: 'This method should be called to revoke all JWT tokens.'
      operationId: api.controllers.security_controller.revoke_all_tokens
      responses:
        '200':
          description: 'Tokens revoked succesfully'
        default:
          $ref: '#/components/responses/ResponseError'

  /security/roles:
    get:
      tags:
        - security
      summary: 'Gets a list of roles or all roles in the system without specifying anything'
      description: 'For a specific list, indicate the ids separated by commas. Example: ?role_ids=1,2,3'
      operationId: api.controllers.security_controller.get_roles
      parameters:
        - $ref: '#/components/parameters/role_ids'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Return a list of roles"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 1
                      name: 'administrator'
                      policies:
                        id: 1
                        name: wazuhPolicy
                        policy:
                          actions:
                            - "agent:read"
                            - "agent:delete"
                          effect: allow
                          resources:
                            - "agent:id:*"
                      rule:
                        FIND:
                          r'^auth[a-zA-Z]+$':
                            - "administrator"
                    - id: 2
                      name: 'normal_user'
                      rule:
                        MATCH:
                          privileges: 'limit_access'
                  total_affected_items: 2
                message: "All available roles were shown"
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - security
      summary: 'Add a new role to the system'
      description: 'Add a new role, all fields need to be specified'
      operationId: api.controllers.security_controller.add_role
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesRequest'
              required:
                - name
                - rule
            example:
              name: "normal"
              rule:
                MATCH:
                  definition: "normalRule"
      responses:
        '200':
          description: 'Return the information of the new role'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 2
                      name: normal_user
                      policies: []
                      rule:
                        MATCH:
                          definition: limit_access
                  total_affected_items: 1
                message: Role created correctly
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
        - security
      summary: 'Delete a list of roles or all roles in the system'
      description: 'Policies linked to roles are not going to be removed.'
      operationId: api.controllers.security_controller.remove_roles
      parameters:
        - $ref: '#/components/parameters/role_ids'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Remove result'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - '6'
                  total_affected_items: 1
                message: All available roles were deleted
        default:
          $ref: '#/components/responses/ResponseError'

  /security/roles/{role_id}:
    put:
      tags:
        - security
      summary: 'Modify a specified role'
      description: 'Modify a role, cannot modify associated policies in this endpoint,
                        at least one property must be indicated'
      operationId: api.controllers.security_controller.update_role
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/role_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesRequest'
            example:
              name: "normal"
              rule:
                MATCH:
                  definition: "normalRule"
      responses:
        '200':
          description: 'Information of role modified'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 5
                      name: normal8
                      policies: []
                      rule:
                        MATCH:
                          definition: normalRule8
                  total_affected_items: 1
                message: Role updated correctly
        default:
          $ref: '#/components/responses/ResponseError'

  /security/policies:
    get:
      tags:
        - security
      summary: 'Get all policies in the system'
      description: 'Get all policies in the system, including the administrator policy'
      operationId: api.controllers.security_controller.get_policies
      parameters:
        - $ref: '#/components/parameters/policy_ids_rbac'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Return a list of policies"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 1
                      name: wazuhPolicy
                      policy:
                        actions:
                          - "*:*"
                        effect: allow
                        resources:
                          - "*:*"
                    - id: 2
                      name: test_i
                      policy:
                        actions:
                          - agent:delete
                        effect: allow
                        resources:
                          - agent:id:004
                          - agent:id:005
                          - agent:id:006
                  total_affected_items: 2
                message: All available policies were shown
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - security
      summary: "Add a new policy"
      description: "Add a new policy, all fields need to be specified"
      operationId: api.controllers.security_controller.add_policy
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesRequest'
              required:
                - name
                - policy
            example:
              name: 'normal_policy'
              policy:
                actions:
                  - "agent:delete"
                resources:
                  - "agent:id:001"
                  - "agent:id:002"
                  - "agent:id:003"
                effect: "allow"
      responses:
        '200':
          description: 'Add a policy'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  id: 2
                  name: 'normal_policy'
                  policy:
                    actions:
                      - "agent:delete"
                    resources:
                      - "agent:id:001"
                    effect: "allow"
                  roles: []
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
        - security
      summary: 'Delete a list of policies or all policies in the system'
      description: 'Roles linked to policies are not going to be removed.'
      operationId: api.controllers.security_controller.remove_policies
      parameters:
        - $ref: '#/components/parameters/policy_ids_rbac'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Operation result'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - '2'
                  total_affected_items: 1
                message: All specified policies were deleted
        default:
          $ref: '#/components/responses/ResponseError'

  /security/policies/{policy_id}:
    put:
      tags:
        - security
      summary: 'Modify a specified policy'
      description: 'Modify a policy, at least one property must be indicated'
      operationId: api.controllers.security_controller.update_policy
      parameters:
        - $ref: '#/components/parameters/policy_id_rbac'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesRequest'
            example:
              name: 'wazuhPolicy'
              policy:
                actions:
                  - "agent:delete"
                resources:
                  - "agent:id:001"
                  - "agent:id:002"
                  - "agent:id:003"
                effect: 'allow'
      responses:
        '200':
          description: 'Information of policy modified'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 2
                      name: wazuhPolicy
                      policy:
                        actions:
                          - agent:delete
                        effect: allow
                        resources:
                          - agent:id:001
                          - agent:id:002
                          - agent:id:003
                      roles: []
                  total_affected_items: 1
                message: Policy updated correctly

        default:
          $ref: '#/components/responses/ResponseError'

  /security/roles/{role_id}/policies:
    post:
      tags:
        - security
      summary: 'Create a specified relation role-policy'
      description: 'Create a specified relation role-policy, one role may have multiples policies'
      operationId: api.controllers.security_controller.set_role_policy
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/policy_ids_rbac_required'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Role information'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  id: 1
                  name: 'wazuh'
                  rule:
                    MATCH:
                      administrator: 'administrator'
                  policies:
                    - id: 1
                      name: 'wazuhPolicy'
                      policy:
                        administrator: 'total_access'

        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
        - security
      summary: 'Delete a specified relation role-policy'
      description: 'Delete a specified relation role-policy'
      operationId: api.controllers.security_controller.remove_role_policy
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/policy_ids_rbac_required'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Role information'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  id: 2
                  name: 'normal'
                  rule:
                    normal: 'normal'
                  policies: []
        default:
          $ref: '#/components/responses/ResponseError'

  /security/users:
    get:
      tags:
        - security
      summary: 'Get user information'
      description: 'Get the information of a specified user.'
      operationId: api.controllers.security_controller.get_users
      parameters:
        - $ref: '#/components/parameters/usernames'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Information about user'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    message: 'User created correctly'
        '401':
          description: 'Access unauthorized'
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - security
      summary: 'Create new user'
      description: 'Adds a new user to the system through the API.'
      operationId: api.controllers.security_controller.create_user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 4
                  maxLength: 20
                  format: names
                password:
                  type: string
                  maxLength: 64
                  minLength: 8
                  format: password
              required:
                - username
                - password
      responses:
        '200':
          description: 'User created successful'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  message: 'User created correctly'

    delete:
      tags:
        - security
      summary: 'Delete an user'
      description: "Delete a user by specifying their name"
      operationId: api.controllers.security_controller.delete_users
      parameters:
        - $ref: '#/components/parameters/usernames'
      responses:
        '200':
          description: 'User deleted successful'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    message: 'User deleted correctly'

  /security/users/{username}:
    put:
      tags:
        - security
      summary: 'Modify a user'
      description: "Modify a user's password by specifying their name."
      operationId: api.controllers.security_controller.update_user
      parameters:
        - $ref: '#/components/parameters/username'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  maxLength: 64
                  minLength: 8
                  format: password
              required:
                - password
      responses:
        '200':
          description: 'User updated successful'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    message: 'User updated correctly'

  /overview/agents:
    get:
      tags:
        - overview
      summary: 'Get a full agents overview'
      description: 'Returns a dictionary with a full agents overview.'
      operationId: api.controllers.overview_controller.get_overview_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Overview of agents'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/OverviewAgents'
              example:
                data:
                  nodes:
                    items:
                      - count: 1
                        node_name: master-node
                      - count: 1
                        node_name: worker1
                    totalItems: 2
                  groups:
                    items:
                      - count: 5
                        name: default
                        mergedSum: 8cf9a9972b793548a1bb6fbb00e58af6
                        configSum: ab73af41699f13fdd81903b5f23d8d00
                    totalItems: 1
                  agent_os:
                    items:
                      - os:
                          name: Ubuntu
                          platform: ubuntu
                          version: 18.04.2 LTS
                        count: 6
                    totalItems: 6
                  agent_status:
                    total: 6
                    active: 6
                    disconnected: 0
                    never_connected: 0
                    pending: 0
                  agent_version:
                    items:
                      - version: Wazuh v4.0.0
                        count: 1
                      - version: Wazuh v3.11.0
                        count: 5
                    totalItems: 6
                  last_registered_agent:
                    os:
                      arch: x86_64
                      codename: Bionic Beaver
                      minor: "18"
                      major: "04"
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ee7d4f51c0ae |4.18.0-16-generic |#17~18.04.1-Ubuntu SMP Tue Feb 12 13:35:51 UTC 2019 |x86_64
                      version: 18.04.2 LTS
                    version: Wazuh v3.9.5
                    dateAdd: "2019-08-20 11:42:14"
                    node_name: master-node
                    status: active
                    group:
                      - default
                    mergedSum: 8cf9a9972b793548a1bb6fbb00e58af6
                    name: ee7d4f51c0ae
                    lastKeepAlive: "2019-08-20 11:48:20"
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    registerIP: any
                    ip: "172.20.0.8"
                    id: "005"
                    manager: 1a683501f77f
        default:
          $ref: '#/components/responses/ResponseError'

externalDocs:
  description: Find more about Wazuh API usage
  url: 'https://documentation.wazuh.com/current/user-manual/api/index.html'
